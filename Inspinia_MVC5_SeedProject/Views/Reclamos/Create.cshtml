@model Inspinia_MVC5_SeedProject.Models.Reclamo

@{
    ViewBag.Title = "Create";
}

<style>
        #initialihiddenbutton,
        #btnCancelarBienes {
            display: none;
        }

        .ibox-hr {
            -moz-border-bottom-colors: none;
            -moz-border-left-colors: none;
            -moz-border-right-colors: none;
            -moz-border-top-colors: none;
            background-color: #ffffff;
            border-color: #e7eaec;
            border-image: none;
            border-style: solid solid none;
            border-width: 2px 0 0;
            color: inherit;
            margin-bottom: 0;
            padding: 0;
            min-height: 48px;
        }

        p {
            font-weight: 400 !important;
        }

        h2 {
            font-size: 26px !important;
            font-weight: 600 !important;
        }

        .container {
            width: 97% !important;
        }

        .btn-default {
            background: #818e99 !important;
            color: white !important;
            opacity: inherit !important;
        }

        .stepwizard .btn-primary {
            background-color: #428bca !important;
            color: white !important;
        }


        /*body{
        margin-top:40px;
    }*/

        .stepwizard-step p {
            margin-top: 10px;
        }

        .stepwizard-row {
            display: table-row;
        }

        .stepwizard {
            display: table;
            width: 100%;
            position: relative;
        }

        .stepwizard-step button[disabled] {
            opacity: 1 !important;
            filter: alpha(opacity=100) !important;
        }

        .stepwizard-row:before {
            top: 14px;
            bottom: 0;
            position: absolute;
            content: " ";
            width: 100%;
            height: 1px;
            background-color: #ccc;
            z-index: 0;
        }

        .stepwizard-step {
            display: table-cell;
            text-align: center;
            position: relative;
        }

        .btn-circle {
            width: 30px;
            height: 30px;
            text-align: center;
            padding: 6px 0;
            font-size: 12px;
            line-height: 1.428571429;
            border-radius: 15px;
        }
</style>

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-sm-4">
        <h2>Reclamos</h2>
        <ol class="breadcrumb">
            <li>
                @Html.ActionLink("Lista", "Index")
            </li>
            <li class="active">
                <strong>Crear</strong>
            </li>
        </ol>
    </div>
    <div class="col-sm-8">
        <div class="title-action">
            <a class="btn btn-success btn-outline dim" href="@Url.Action("Index","Reclamos")"><i class="fa fa-arrow-left"></i>&nbsp;&nbsp;Regresar</a>
            <a class="btn btn-success btn-outline dim" href="@Url.Action("Create","ArchivosReclamos")" onclick="Valor()"><i class="fa fa-file-image-o"></i>&nbsp;&nbsp;Archivos</a>
        </div>
    </div>
</div>



<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h5>Ingresar Reclamo</h5>
                </div>

                <div class="ibox-content">
                    <!--Vistas que irán de siguiente en siguiente-->
                    <div class="container">
                        <div class="stepwizard">
                            <div class="stepwizard-row setup-panel">
                                <div class="stepwizard-step col-xs-3">
                                    <a href="#step-1" type="button" class="btn btn-primary btn-circle">1</a>
                                    <p>Póliza y Bienes Asegurados</p>
                                </div>
                                <div class="stepwizard-step col-xs-3">
                                    <a href="#step-2" type="button" class="btn btn-default btn-circle" @*disabled="disabled"*@>2</a>
                                    <p>Reclamos</p>
                                </div>
                                <div class="stepwizard-step col-xs-3">
                                    <a href="#step-3" type="button" class="btn btn-default btn-circle" @*disabled="disabled"*@>3</a>
                                    <p>Documentos</p>
                                </div>
                                <div class="stepwizard-step col-xs-3">
                                    <a href="#step-4" type="button" class="btn btn-default btn-circle" @*disabled="disabled"*@>4</a>
                                    <p>Pagos</p>
                                </div>
                            </div>
                        </div>
                    </div>

                    <br />

                    @using (Html.BeginForm("Create", "Reclamos", FormMethod.Post, new { @onsubmit = "return AgregarDatos(this)" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(false, "", new { @class = "text-danger" })
                        <!--Paso #1-->
                        <div class="row setup-content" id="step-1">
                            <div class="col-xs-12 col-md-offset-0">
                                <div class="col-md-12">
                                    <div class="panel panel-primary">
                                        <div class="panel-heading">
                                            <i class="fa fa-pencil-square-o fa-lg"></i>
                                        </div>
                                        <!--Contenido de la caja-->
                                        <div class="panel-body">
                                            <!--Caja interna para división-->
                                            <div class="row">
                                                <div class="col-lg-6 b-r">
                                                    <!--Título del primer contenedor-->
                                                    <div class="container" style="margin-top:11px;">
                                                        <h2>Póliza</h2>
                                                        <div class="ibox-tools">
                                                            <button class="btn btn-danger fa fa-times " type="button" onclick="limpiarP()" style="float: right;margin-top: -2.3em;margin-left: 1em;" id="initialihiddenbutton">&nbsp;&nbsp;Cancelar</button>
                                                            <button class="btn btn-success fa fa-search" data-toggle="modal" data-target="#modal-poliza" type="button" style="float: right;margin-top:-2.3em; margin-left:1em">&nbsp;&nbsp;Buscar</button>
                                                        </div>
                                                        <hr class="ibox-hr" />
                                                    </div>
                                                    <!--Fin del titulo-->
                                                    <div class="col-md-12">
                                                        <div class="form-group">
                                                            <label class="control-label col-md-4" for="NumPoliza">Número de Póliza</label>
                                                            <div class="col-md-8">
                                                                <input id="NumPoliza" name="NumPoliza" class="form-control" readonly />
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <br /><br /><br />
                                                    <div class="col-md-12">
                                                        <div class="form-group">
                                                            <label class="control-label col-md-4" for="Nombres">Nombre del Cliente</label>
                                                            <div class="col-md-8">
                                                                <input id="Nombres" name="Nombres" class="form-control" readonly />
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <br /><br /><br />
                                                    <div class="col-md-12">
                                                        <div class="form-group">
                                                            <label class="control-label col-md-4" for="Producto">Producto</label>
                                                            <div class="col-md-8">
                                                                <input id="Producto" name="Producto" class="form-control" readonly />
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div> <!--termina contenedor de la primera división-->
                                                <!--Segundo contenedor-->
                                                <div class="col-lg-6">
                                                    <!--Título del segundo contenedor-->
                                                    <div class="container" style="margin-top:11px;">
                                                        <h2>Bien Asegurado</h2>
                                                        <div class="ibox-tools">
                                                            <a class="btn btn-danger fa fa-times" onclick="limpiar()" style="float: right;margin-top: -2.3em;margin-left: 1em;" id="btnCancelarBienes">&nbsp;&nbsp;Cancelar</a>
                                                            <a class="btn btn-success fa fa-search" id="btnBuscarBien" data-toggle="modal" data-target="#modal-bienes" style="float: right;margin-top:-2.3em; margin-left:1em">&nbsp;&nbsp;Buscar</a>
                                                        </div>
                                                        <hr class="ibox-hr" />
                                                    </div><!--Fin del titulo-->
                                                    <div class="col-md-12">
                                                        <div class="form-group">
                                                            <label class="control-label col-md-4" for="NumCertificado">Número de Certificado</label>
                                                            <div class="col-md-8">
                                                                <input id="NumCertificado" name="NumCertificado" class="form-control" readonly />
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <br /><br /><br />
                                                    <div class="col-md-12">
                                                        <div class="form-group">
                                                            <label class="control-label col-md-4" for="Observaciones">Observaciones</label>
                                                            <div class="col-md-8">
                                                                <input id="Observaciones" name="Observaciones" class="form-control" readonly />
                                                            </div>
                                                        </div>
                                                    </div>

                                                </div> <!--termina el segundo contenedor-->
                                            </div> <!--termina caja para división-->

                                            <button class="btn btn-primary nextBtn pull-right" type="button" style="margin-top:1.7em;"> Siguiente </button>

                                        </div> <!--termina contenido de la caja-->
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!--Paso #2-->
                        <div class="row setup-content" id="step-2">
                            <div class="col-md-offset-0">
                                <div class="col-md-12">
                                    <div class="panel panel-primary">
                                        <div class="panel-heading">
                                            <i class="fa fa-pencil-square-o fa-lg"></i>
                                        </div>
                                        <div class="container" style="margin-top:20px;">
                                            <h2>Datos del Reclamo</h2>
                                            <hr class="ibox-hr" />
                                        </div>

                                        <div class="panel-body">

                                            <div class="form-horizontal">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.NumReclamo, new { @class = "control-label col-md-2" })
                                                    <div class="col-md-10">
                                                        @Html.EditorFor(model => model.NumReclamo, new { htmlAttributes = new { @class = "form-control", @id = "txtNumReclamo" } })
                                                        @Html.ValidationMessageFor(model => model.NumReclamo, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.TipoReclamo, new { @class = "control-label col-md-2" })
                                                    <div class="col-md-10">
                                                        @Html.DropDownList("TipoReclamo", (SelectList)ViewBag.TiposReclamo, htmlAttributes: new { @class = "form-control", @id = "dropTipoReclamo" })
                                                        @Html.ValidationMessageFor(model => model.TipoReclamo, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.Dependiente, new { @class = "control-label col-md-2" })
                                                    <div class="col-md-10">
                                                        @Html.EditorFor(model => model.Dependiente, new { htmlAttributes = new { @class = "form-control", @id = "txtDependiente" } })
                                                        @Html.ValidationMessageFor(model => model.Dependiente, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.Ajustador, new { @class = "control-label col-md-2" })
                                                    <div class="col-md-10">
                                                        @Html.EditorFor(model => model.Ajustador, new { htmlAttributes = new { @class = "form-control", @id = "txtAjustador" } })
                                                        @Html.ValidationMessageFor(model => model.Ajustador, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.FechaAviso, new { @class = "control-label col-md-2" })
                                                    <div class="col-md-10">
                                                        @Html.EditorFor(model => model.FechaAviso, new { htmlAttributes = new { @class = "form-control", @id = "txtFechaAviso" } })
                                                        @Html.ValidationMessageFor(model => model.FechaAviso, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.FechaSiniestro, new { @class = "control-label col-md-2" })
                                                    <div class="col-md-10">
                                                        @Html.EditorFor(model => model.FechaSiniestro, new { htmlAttributes = new { @class = "form-control", @id = "txtFechaSiniestro" } })
                                                        @Html.ValidationMessageFor(model => model.FechaSiniestro, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.LugarOcurrencia, new { @class = "control-label col-md-2" })
                                                    <div class="col-md-10">
                                                        @Html.EditorFor(model => model.LugarOcurrencia, new { htmlAttributes = new { @class = "form-control", @id = "txtLugarOcurrencia" } })
                                                        @Html.ValidationMessageFor(model => model.LugarOcurrencia, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.MontoReclamado, new { @class = "control-label col-md-2" })
                                                    <div class="col-md-10">
                                                        @Html.EditorFor(model => model.MontoReclamado, new { htmlAttributes = new { @class = "form-control", @id = "txtMontoReclamado" } })
                                                        @Html.ValidationMessageFor(model => model.MontoReclamado, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.Responsable,new { @class = "control-label col-md-2" })
                                                    <div class="col-md-10">
                                                        @Html.EditorFor(model => model.Responsable,new { htmlAttributes = new { @class = "form-control",@id = "txtResponsable" } })
                                                        @Html.ValidationMessageFor(model => model.Responsable,"",new { @class = "text-danger" })
                                                    </div>
                                                </div>



                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.CoberturaReclamoId, "Cobertura reclamada", new { @class = "control-label col-md-2" })
                                                    <div class="col-md-10">
                                                        @Html.DropDownList("CoberturaReclamoId", (SelectList)ViewBag.CoberturaReclamoId, htmlAttributes: new { @class = "form-control", @id = "dropCoberturaR" })
                                                        @Html.ValidationMessageFor(model => model.CoberturaReclamoId, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>

                                            </div>

                                            <button class="btn btn-primary backBtn pull-left" type="button" style="float:left; margin-top:1.7em;">Regresar</button>
                                            <button class="btn btn-primary nextBtn pull-right" type="button" style="margin-top:1.7em;">Siguiente</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!--Paso #3-->
                        <div class="row setup-content" id="step-3">
                            <div class="col-md-offset-0">
                                <div class="col-md-12">
                                    <div class="panel panel-primary">
                                        <div class="panel-heading">
                                            <i class="fa fa-pencil-square-o fa-lg"></i>
                                        </div>
                                        <div class="container" style="margin-top:20px;">
                                            <h2>Documentos remitidos</h2>
                                            <hr class="ibox-hr" />
                                        </div>

                                        <div class="panel-body">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.NumReclamo, "Seleccione el documento", htmlAttributes: new { @class = "control-label col-md-4" })
                                                <div class="col-md-8">
                                                    @Html.DropDownList("DocumentoId", (SelectList)ViewBag.DocumentoId, "-Seleccione un documento-", htmlAttributes: new { @class = "form-control", @id = "dropDocumentos" })
                                                    @Html.ValidationMessage("", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <br /><br />
                                            <div class="form-group">
                                                <label class="control-label col-md-4">Fecha</label>
                                                <div class="col-md-8">
                                                    <input type="date" class="form-control" name="Fecha" id="txtFecha" />
                                                </div>
                                            </div>
                                            <br /><br />
                                            <div class="form-group">
                                                <label class="control-label col-md-4">Emisor</label>
                                                <div class="col-md-8">
                                                    <input type="text" class="form-control" name="Emisor" id="txtEmisor" />
                                                </div>
                                            </div>
                                            <br /><br />
                                            <div class="form-group">
                                                <label class="control-label col-md-4">Número</label>
                                                <div class="col-md-8">
                                                    <input type="number" class="form-control" name="Fecha" id="txtNum" />
                                                </div>
                                            </div>
                                            <br /><br />
                                            <div class="form-group">
                                                <label class="control-label col-md-4">Valor</label>
                                                <div class="col-md-8">
                                                    <input type="text" class="form-control" name="Valor" id="txtValor" />
                                                </div>
                                            </div>
                                            <br /><br />
                                            <div class="form-group">
                                                <label class="control-label col-md-4">Comentarios</label>
                                                <div class="col-md-8">
                                                    <input type="text" class="form-control" name="Comentarios" id="txtComentario" />
                                                </div>
                                            </div>
                                            <br /><br />
                                            <div class="ibox-title">
                                                <h2>Documentos</h2>
                                                <a class="btn btn-success fa fa-plus dim pull-right" onclick="agregarDocs()" style="float: right;margin-top: -2.5em;margin-left: 1em;" id="btnAgregarDocs"> &nbsp; &nbsp; Agregar </a>
                                            </div> <!--Fin del titulo-->
                                            <br /><br />
                                            <!--TABLA DE DOCUMENTOS-->
                                            <div class="panel-footer">
                                                <div class="table-responsive">
                                                    <table class="table" id="tableDocumentos">
                                                        <thead>
                                                            <tr>
                                                                <th>Documento</th>
                                                                <th>Fecha</th>
                                                                <th>Emisor</th>
                                                                <th>Número</th>
                                                                <th>Valor</th>
                                                                <th>Comentarios</th>
                                                                <th>Acciones</th>
                                                            </tr>
                                                        </thead>
                                                    </table>
                                                </div>
                                            </div>
                                            <button class="btn btn-primary backBtn pull-left" type="button" style="float:left; margin-top:1.7em;">Regresar</button>
                                            <button class="btn btn-primary nextBtn pull-right" type="button" style="margin-top:1.7em;">Siguiente</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!--Paso #4-->
                        <div class="row setup-content" id="step-4">
                            <div class="col-xs-12 col-md-offset-0">
                                <div class="col-md-12">
                                    <div class="panel panel-primary">
                                        <div class="panel-heading">
                                            <i class="fa fa-pencil-square-o fa-lg"></i>
                                        </div>
                                        <div class="container" style="margin-top:20px;">
                                            <h2>Pagos efectuados</h2>
                                            <hr class="ibox-hr" />
                                        </div>
                                        <!--Contenido de la caja-->
                                        <div class="panel-body">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.NumReclamo, "Seleccione el tipo de pago", htmlAttributes: new { @class = "control-label col-md-4" })
                                                <div class="col-md-8">
                                                    @Html.DropDownList("TipoPagoId", (SelectList)ViewBag.TipoPago, "-Seleccione un tipo de pago-", htmlAttributes: new { @class = "form-control", @id = "dropTipoPago" })
                                                    @Html.ValidationMessage("", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <br /><br />
                                            <div class="form-group">
                                                <label class="control-label col-md-4">Fecha</label>
                                                <div class="col-md-8">
                                                    <input type="date" class="form-control" name="FechaPago" id="txtFechaP" />
                                                </div>
                                            </div>
                                            <br /><br />
                                            <div class="form-group">
                                                <label class="control-label col-md-4">Moneda</label>
                                                <div class="col-md-8">
                                                    <select class="form-control col-md-8" name="Moneda" id="txtMoneda">
                                                        <option value="val1">Dólares</option>
                                                        <option value="val2">Córdobas</option>
                                                    </select>
                                                </div>
                                            </div>
                                            <br /><br />
                                            <div class="form-group">
                                                <label class="control-label col-md-4">Valor</label>
                                                <div class="col-md-8">
                                                    <input type="text" class="form-control" name="Valor" id="txtValorP" />
                                                </div>
                                            </div>
                                            <br /><br />
                                            <div class="form-group">
                                                <label class="control-label col-md-4">Número de Documento</label>
                                                <div class="col-md-8">
                                                    <input type="text" class="form-control" name="NumDoc" id="txtNumDoc" />
                                                </div>
                                            </div>
                                            <br /><br />
                                            <div class="form-group">
                                                <label class="control-label col-md-4">Banco/Taller</label>
                                                <div class="col-md-8">
                                                    <input type="text" class="form-control" name="Banco" id="txtBanco" />
                                                </div>
                                            </div>
                                            <br /><br />
                                            <div class="form-group">
                                                <label class="control-label col-md-4">Notas</label>
                                                <div class="col-md-8">
                                                    <input type="text" class="form-control" name="Notas" id="txtNotas" />
                                                </div>
                                            </div>
                                            <br /><br />
                                            <div class="ibox-title">
                                                <h2>Pagos</h2>
                                                <a class="btn btn-success fa fa-plus dim pull-right" onclick="agregarPagos()" style="float: right;margin-top: -2.5em;margin-left: 1em;" id="btnAgregarPagos"> &nbsp; &nbsp; Agregar </a>
                                            </div> <!--Fin del titulo-->
                                            <br /><br />
                                            <!--TABLA DE PAGOS-->
                                            <div class="panel-footer">
                                                <div class="table-responsive">
                                                    <table class="table" id="tablePagos">
                                                        <thead>
                                                            <tr>
                                                                <th>Tipo de Pago</th>
                                                                <th>Fecha</th>
                                                                <th>Moneda</th>
                                                                <th>N° Doc</th>
                                                                <th>Valor</th>
                                                                <th>Banco/Taller</th>
                                                                <th>Notas</th>
                                                                <th>Acciones</th>
                                                            </tr>
                                                        </thead>
                                                    </table>
                                                </div>
                                            </div>

                                            <button class="btn btn-primary backBtn pull-left" type="button" style="float:left; margin-top:1.7em;">Regresar</button>
                                            <button class="btn btn-primary pull-right" type="submit" style="margin-top:1.7em;"> Guardar </button>   
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
 </div>

 @*Modal para buscar una póliza*@
<div class="modal inmodal fade" id="modal-poliza" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title">Pólizas</h4>
            </div>
            <div class="modal-body">
                @Html.Partial("_BuscarPoliza")
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->+
</div>
        
        @*Modal para buscar un bien*@
        <div class="modal inmodal fade" id="modal-bienes" tabindex="-1" role="dialog" aria-hidden="true">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                        <h4 class="modal-title">Bienes Asegurados</h4>
                    </div>
                    <div class="modal-body">
                        @Html.Partial("_BuscarBien")
                    </div>
                </div>
                <!-- /.modal-content -->
            </div>
            <!-- /.modal-dialog -->
        </div>          

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
        <!-- Datatable -->
        <link href="~/Content/DataTables/media/css/dataTables.bootstrap.min.css" rel="stylesheet" />
        <link href="~/Content/DataTables/media/css/jquery.dataTables.min.css" rel="stylesheet" />
        <link href="~/Content/DataTables/media/css/dataTables.jqueryui.min.css" rel="stylesheet" />
        <script src="~/Scripts/DataTables/media/js/dataTables.bootstrap.min.js"></script>
        <script src="~/Scripts/DataTables/media/js/dataTables.jqueryui.min.js"></script>
        <script src="~/Scripts/DataTables/media/js/jquery.dataTables.min.js"></script>
        <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
        <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"> </script>


        <!-- Script para el paso a paso.-->
        <script>
            $(document).ready(function () {
                var navListItems = $('div.setup-panel div a'),
                        allWells = $('.setup-content'),
                        allNextBtn = $('.nextBtn'),
                        allBackButton = $('.backBtn');

                allWells.hide();

                navListItems.click(function (e) {
                    e.preventDefault();
                    var $target = $($(this).attr('href')),
                            $item = $(this);

                    if (!$item.hasClass('disabled')) {
                        navListItems.removeClass('btn-primary').addClass('btn-default');
                        $item.addClass('btn-primary');
                        allWells.hide();
                        $target.show();
                        $target.find('input:eq(0)').focus();
                    }
                });
                allBackButton.click(function () {
                    var curStep = $(this).closest(".setup-content"),
                        curStepBtn = curStep.attr("id"),
                        nextStepWizard = $('div.setup-panel div a[href="#' + curStepBtn + '"]').parent().prev().children("a"),
                        curInputs = curStep.find("input[type='text'],input[type='url']"),
                        isValid = true;

                    $(".form-group").removeClass("has-error");
                    for (var i = 0; i < curInputs.length; i++) {
                        if (!curInputs[i].validity.valid) {
                            isValid = false;
                            $(curInputs[i]).closest(".form-group").addClass("has-error");
                        }
                    }

                    nextStepWizard.removeAttr('disabled').trigger('click');
                });

                allNextBtn.click(function () {
                    var curStep = $(this).closest(".setup-content"),
                        curStepBtn = curStep.attr("id"),
                        nextStepWizard = $('div.setup-panel div a[href="#' + curStepBtn + '"]').parent().next().children("a"),
                        curInputs = curStep.find("input[type='text'],input[type='url']"),
                        isValid = true;

                    $(".form-group").removeClass("has-error");
                    for (var i = 0; i < curInputs.length; i++) {
                        if (!curInputs[i].validity.valid) {
                            isValid = false;
                            $(curInputs[i]).closest(".form-group").addClass("has-error");
                        }
                    }

                    if (isValid)
                        nextStepWizard.removeAttr('disabled').trigger('click');
                });


                $('div.setup-panel div a.btn-primary').trigger('click');
            });
        </script>
        <script>
            $(document).ready(function () {
                $("#dropTipoReclamo,#dropCoberturaR,#dropDocumentos,#dropTipoPago,#txtMoneda").select2({ width: "100%" });
            });
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            //===================================================================POLIZAS=========================================================================
            // Instancia de dataTable para la tabla que muestra las pólizas
            var dataTable = null;

            $(function () {
                dataTable = $("#BuscarPoliza").DataTable({
                    "ajax": {
                        "url": "@Url.Action("getPolizas", "BienesAsegurados")",
                    "type": "POST",
                    "dataType": "Json"
                }, "columns": [
                {
                    "data": "IdPoliza", "render": function (data) {
                        return "<button class='btn btn-success' value='" + data + "'>Seleccionar</button>";
                    }
                },
                { "data": "NumPoliza" },
                { "data": "Apellidos" },
                { "data": "Nombres" },
                { "data": "Identificacion" },
                { "data": "Producto"},
                { "data": "Aseguradora" },
                ], "language": {
                    "sProcessing": "Procesando...",
                    "sLengthMenu": "Mostrar _MENU_ registros",
                    "sZeroRecords": "No se encontraron resultados",
                    "sEmptyTable": "No hay pólizas para mostrar",
                    "sInfo": "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
                    "sInfoEmpty": "Mostrando registros del 0 al 0 de un total de 0 registros",
                    "sInfoFiltered": "(filtrado de un total de _MAX_ registros)",
                    "sInfoPostFix": "",
                    "sSearch": "Buscar:",
                    "sUrl": "",
                    "sInfoThousands": ",",
                    "sLoadingRecords": "Cargando...",
                    "oPaginate": {
                        "sFirst": "Primero",
                        "sLast": "Último",
                        "sNext": "Siguiente",
                        "sPrevious": "Anterior"
                    },
                    "oAria": {
                        "sSortAscending": ": Activar para ordenar la columna de manera ascendente",
                        "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                    }
                }
                });
            });


            $idPolizaSelected = 0;
            // Mostrar el boton agregar solo cuando se seleccione un cliente
            $("#NumPoliza").change(function () {
                if (!$(this).val())
                    $("#initialihiddenbutton").hide();
                else
                    $("#initialihiddenbutton").show();
            });

            // Evento al hacer click en el boton seleccionar
            $(function () {
                $("#BuscarPoliza tbody").on("click", "button", function () {
                    var data = dataTable.row($(this).parents('tr')).data();
                    $("#NumPoliza").val(data.NumPoliza).change();
                    $("#Nombres").val(data.Nombres + " " + data.Apellidos).change();
                    $("#Producto").val(data.Producto);
                    $idPolizaSelected = data.IdPoliza;
                    $("#modal-poliza .close").click();
                });
            });

            //Limpiar campos de poliza
            function limpiarP()
            {
                $("#NumPoliza").val("").change();
                $("#Nombres").val("");
                $("#Producto").val("");
                $idPolizaSelected = 0;
            }

            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            //===================================================================POLIZAS=========================================================================
            // Instancia de dataTable para la tabla que muestra los bienes
            var dataTableBienes = null;
            dataTableBienes = $("#BuscarBienes").DataTable({
                //"info": false,
                //"paging": false,
                //"ordering": false,
                //"searching": false,
                "language": {
                    "sProcessing": "Procesando...",
                    "sLengthMenu": "Mostrar _MENU_ registros",
                    "sZeroRecords": "No se encontraron resultados",
                    "sEmptyTable": "No hay bienes asegurados para la póliza seleccionada.",
                    "sInfo": "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
                    "sInfoEmpty": "Mostrando registros del 0 al 0 de un total de 0 registros",
                    "sInfoFiltered": "(filtrado de un total de _MAX_ registros)",
                    "sInfoPostFix": "",
                    "sSearch": "Buscar:",
                    "sUrl": "",
                    "sInfoThousands": ",",
                    "sLoadingRecords": "Cargando...",
                    "oPaginate": {
                        "sFirst": "Primero",
                        "sLast": "Último",
                        "sNext": "Siguiente",
                        "sPrevious": "Anterior"
                    },
                    "oAria": {
                        "sSortAscending": ": Activar para ordenar la columna de manera ascendente",
                        "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                    }
                
                }, "columnDefs": [{
                    "targets": 0,
                    "render": function (data, type, row, meta) {
                        return "<button class='btn btn-sm btn-success' value='" + data + "'>Seleccionar</button>";
                    }
                }]
            });

            $("#btnBuscarBien").click(function () {
                var url = "/Reclamos/SearchBienes/" + $idPolizaSelected;
                $.ajax({
                    type: "POST",
                    url: url,
                    dataType: "JSON",
                    success: function (list) {
                        dataTableBienes.clear();
                        for (var a = 0; a < list.data.length; a++) {
                            dataTableBienes.row.add([
                               list.data[a].Id,
                            list.data[a].Num,
                            list.data[a].Observacion]).draw(false);
                        }
                    }
                })
            })

            $idBienAseguradoSelected = 0;

            $("#NumCertificado").change(function () {
                if (!$(this).val())
                    $("#btnCancelarBienes").hide();
                else
                    $("#btnCancelarBienes").show();
            });

            
            $(function () {
                // Evento al hacer click en el boton seleccionar
                $("#BuscarBienes tbody").on("click", "button", function () {
                    var data = dataTableBienes.row($(this).parents('tr')).data();
                    $("#NumCertificado").val(data[1]).change();
                    $("#Observaciones").val(data[2]);
                    $idBienAseguradoSelected = data[0];
                    $("#modal-bienes .close").click();
                });
            });

            //Limpiar campos de cliente
            function limpiar() {
                $("#NumCertificado").val("").change();
                $("#Observaciones").val("");
                $idBienAseguradoSelected = 0;
            }

            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            //===================================================================TABLA DE DOCUMENTOS==============================================================
            // Referencia la tabla de documentos
            var dataTableDocs = null;
            // Crea una instancia de datatable para el detalle
            $(function () {
                // Instancia del datatable para mostrar los detalles.
                dataTableDocs = $("#tableDocumentos").DataTable({
                    "info": false,
                    "paging": false,
                    "ordering": false,
                    "searching": false,
                    "language": {
                        "emptyTable": "Agregue documentos remitidos",
                        "search": "Busqueda"
                    }, "columnDefs": [{
                        "targets": 6,
                        "render": function (data, type, row, meta) {
                            return "<button class='btn btn-sm btn-danger' value='" + data + "' type='button'>Remover</button>";
                        }
                    }]
                });
            });

            //Agregar filas a la tabla
            function agregarDocs() {
                if ($("#dropDocumentos").val().trim() &&
                     $("#txtFecha").val().trim() &&
                     $("#txtNum").val().trim() &&
                     $("#txtValor").val().trim()) {

                    dataTableDocs.row.add([
                            $("#dropDocumentos").find('option:selected').text(),
                            $("#txtFecha").val(),
                            $("#txtEmisor").val(),
                            $("#txtNum").val(),
                            $("#txtValor").val(),
                            $("#txtComentario").val(),
                            $("#dropDocumentos").val()]).draw(false);
                    // Limpíar seleccion
                    $("#dropDocumentos").val("");
                    $("#txtFecha").val("");
                    $("#txtEmisor").val("");
                    $("#txtNum").val("");
                    $("#txtValor").val("");
                    $("#txtComentario").val("");
                } else {
                    swal("Hay campos necesarios en el formulario que aún están vacíos.\nPor favor verifique.", "Seguros & Más", "warning");
                }
            }

            // Evento para eliminar una fila
            $(function () {
                $("#tableDocumentos tbody").on('click', 'button', function () {
                    dataTableDocs.row($(this).parents('tr'))
                                    .remove()
                                    .draw(false);
                });
            });

            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            //===================================================================TABLA DE PAGOS===================================================================
            // Referencia la tabla de pagos
            var dataTablePagos = null;
            // Crea una instancia de datatable para el detalle
            $(function () {
                // Instancia del datatable para mostrar los detalles.
                dataTablePagos = $("#tablePagos").DataTable({
                    "info": false,
                    "paging": false,
                    "ordering": false,
                    "searching": false,
                    "language": {
                        "emptyTable": "Agregue pagos efectuados",
                        "search": "Busqueda"
                    }, "columnDefs": [{
                        "targets": 7,
                        "render": function (data, type, row, meta) {
                            return "<button class='btn btn-sm btn-danger' value='" + data + "' type='button'>Remover</button>";
                        }
                    }]
                });
            });

            //Agregar filas a la tabla
            function agregarPagos() {
                if ($("#dropTipoPago").val().trim() &&
                     $("#txtFechaP").val().trim() &&
                     $("#txtMoneda").val().trim() &&
                     $("#txtValorP").val().trim() &&
                     $("#txtNumDoc").val().trim()) {

                    dataTablePagos.row.add([
                            $("#dropTipoPago").find('option:selected').text(),
                            $("#txtFechaP").val(),
                            $("#txtMoneda").find('option:selected').text(),
                            $("#txtValorP").val(),
                            $("#txtNumDoc").val(),
                            $("#txtBanco").val(),
                            $("#txtNotas").val(),
                            $("#dropTipoPago").val()]).draw(false);
                    // Limpíar seleccion
                    $("#txtFechaP").val("");
                    $("#txtMoneda").val("");
                    $("#txtValorP").val("");
                    $("#txtNumDoc").val("");
                    $("#txtBanco").val("");
                    $("#txtNotas").val("");
                    $("#dropTipoPago").val("");
                } else {
                    swal("Hay campos necesarios en el formulario que aún están vacíos.\nPor favor verifique.", "Seguros & Más", "warning");
                }
            }

            // Evento para eliminar una fila
            $(function () {
                $("#tablePagos tbody").on('click', 'button', function () {
                    dataTablePagos.row($(this).parents('tr'))
                                    .remove()
                                    .draw(false);
                });
            });

            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            //===================================================================ALMACENAR========================================================================
            function getDocumentos() {
                $detalleDocs = [];
                var data = dataTableDocs.rows().data();
                data.each(function (value, index) {
                    item = {};
                    // Hacemos un objeto tipo JSON con las descripciones iguales a nuestra clase en C#
                    item["Id"] = 0;
                    item["Fecha"] = value[1];
                    item["Emisor"] = value[2];
                    item["Numero"] = value[3];
                    item["Valor"] = value[4];
                    item["Comentarios"] = value[5];
                    item["DocumentoId"] = value[6];
                    item["Documento"] = null;
                    item["Reclamo"] = null;
                    $detalleDocs.push(item);
                });
                return JSON.stringify($detalleDocs);
            }

            function getPagos() {
                $detallePagos = [];
                var data = dataTablePagos.rows().data();
                data.each(function (value, index) {
                    item = {};
                    // Hacemos un objeto tipo JSON con las descripciones iguales a nuestra clase en C#
                    item["Id"] = 0;
                    item["Moneda"] = value[2];
                    item["Valor"] = value[3];
                    item["NumDoc"] = value[4];
                    item["BancoTaller"] = value[5];
                    item["Nota"] = value[6];
                    item["Fecha"] = value[1];
                    item["TipoDePagoId"] = value[7];
                    item["TipoDePago"] = null;
                    item["Reclamo"] = null;
                    $detallePagos.push(item);
                });
                return JSON.stringify($detallePagos);
            }

            $form = null;
            function AgregarDatos(form) {
                $.validator.unobtrusive.parse(form);
                if (dataTableDocs.rows().count() > 0 && dataTablePagos.rows().count() > 0 && $idPolizaSelected != 0 && $idBienAseguradoSelected!=0) {
                    var data = $(form).serialize() + "&detalleDocs=" + getDocumentos() + "&detallePagos=" + getPagos() + "&PolizaId=" + $idPolizaSelected + "&BienAseguradoId=" + $idBienAseguradoSelected;
                    $.ajax({
                        url: form.action,
                        type: "POST",
                        data: data,
                        success: function (data) {
                            if (data.d == -3) {
                                swal("El número de reclamo que intenta ingresar ya existe.", "Seguros & Más", "error");
                            }
                            else
                                if (data.d > 0) {
                                    window.location.href = '/Reclamos/Create';
                                }
                                else
                                    swal("Hubo un error al intentar guardar.", "Seguros & Más", "error");
                        }
                    });
                } else {
                    swal("Aún faltan datos.\nPor favor verifique.", "Seguros & Más", "error");
                    $detalle = [];
                    return false;
                }
                return false;
            }

            $(document).ready(function () {
                $.ajax({
                    url: "/Polizas/GetValue/",
                    type: "GET",
                    success: function (data) {
                        if (data.PolizaActual > 0) {
                            $.ajax({
                                url: "/Polizas/GetPoliza/" + data.PolizaActual,
                                type: "GET",
                                success: function (data) {
                                    $idPolizaSelected = data.lista[0].IdPoliza;
                                    $("#NumPoliza").val(data.lista[0].NumPoliza).change();
                                    $("#Nombres").val(data.lista[0].Nombres + " " + data.lista[0].Apellidos).change();
                                    $("#Producto").val(data.lista[0].Producto);
                                }
                            });
                        }
                    }
                });
            });

            function Valor() {
                $.ajax({
                    url: "/Reclamos/SetValue/" + 0,
                    type: "GET",
                    success: function (data) {
                    }
                });
            }
        </script>
}
