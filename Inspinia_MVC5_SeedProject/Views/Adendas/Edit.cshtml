@model Inspinia_MVC5_SeedProject.Models.Adenda

@{
    ViewBag.Title = "Edit";
}

<style>
    #initialihiddenbutton,
    #btnCancelarContratante,
    #btnCancelarIntermediario {
        display: none;
    }

    .ibox-hr {
        -moz-border-bottom-colors: none;
        -moz-border-left-colors: none;
        -moz-border-right-colors: none;
        -moz-border-top-colors: none;
        background-color: #ffffff;
        border-color: #e7eaec;
        border-image: none;
        border-style: solid solid none;
        border-width: 2px 0 0;
        color: inherit;
        margin-bottom: 0;
        padding: 0;
        min-height: 48px;
    }

    p {
        font-weight: 400 !important;
    }

    h2 {
        font-size: 26px !important;
        font-weight: 600 !important;
    }

    .container {
        width: 97% !important;
    }

    .btn-default {
        background: #818e99 !important;
        color: white !important;
        opacity: inherit !important;
    }

    .stepwizard .btn-primary {
        background-color: #428bca !important;
        color: white !important;
    }


    /*body{
        margin-top:40px;
    }*/

    .stepwizard-step p {
        margin-top: 10px;
    }

    .stepwizard-row {
        display: table-row;
    }

    .stepwizard {
        display: table;
        width: 100%;
        position: relative;
    }

    .stepwizard-step button[disabled] {
        opacity: 1 !important;
        filter: alpha(opacity=100) !important;
    }

    .stepwizard-row:before {
        top: 14px;
        bottom: 0;
        position: absolute;
        content: " ";
        width: 100%;
        height: 1px;
        background-color: #ccc;
        z-index: 0;
    }

    .stepwizard-step {
        display: table-cell;
        text-align: center;
        position: relative;
    }

    .btn-circle {
        width: 30px;
        height: 30px;
        text-align: center;
        padding: 6px 0;
        font-size: 12px;
        line-height: 1.428571429;
        border-radius: 15px;
    }
</style>          

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-sm-4">
        <h2>Adendas</h2>
        <ol class="breadcrumb">
            <li>
                @Html.ActionLink("Lista", "Index")
            </li>
            <li class="active">
                <strong>Editar</strong>
            </li>
        </ol>
    </div>
    <div class="col-sm-8">
        <div class="title-action">
            <a class="btn btn-success btn-outline dim" href="@Url.Action("Index","Adendas")"><i class="fa fa-arrow-left"></i>&nbsp;&nbsp;Regresar</a>
            <a class="btn btn-success btn-outline dim" href="@Url.Action("CreateAdendas","BienesAsegurados")" onclick="Valor()"><i class="fa fa-file-text-o"></i>&nbsp;&nbsp;Bienes</a>
            @*<a class="btn btn-success btn-outline fa fa-file-image-o dim" href="@Url.Action("Create","ArchivosAdendas")">&nbsp;&nbsp;Archivos</a>*@
        </div>
    </div>
</div>


<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h5>Editar Póliza</h5>
                </div>
                <div class="ibox-content">
                    <!--Steps-->
                    <div class="container">
                        <div class="stepwizard">
                            <div class="stepwizard-row setup-panel">
                                <div class="stepwizard-step col-xs-6">
                                    <a href="#step-1" type="button" class="btn btn-primary btn-circle">1</a>
                                    <p>Adenda</p>
                                </div>
                                <div class="stepwizard-step col-xs-6">
                                    <a href="#step-2" type="button" class="btn btn-default btn-circle" @*disabled="disabled"*@>2</a>
                                    <p>Detalle de Cuotas</p>
                                </div>
                                @*<div class="stepwizard-step col-xs-4">
                                    <a href="#step-3" type="button" class="btn btn-default btn-circle" disabled="disabled">3</a>
                                    <p>Archivos</p>
                                </div>*@
                            </div>
                        </div>
                    </div>
                    <br />
                    @using (Html.BeginForm("Edit", "Adendas"@*, FormMethod.Post, new { @onsubmit = "return EditarDatos(this)" }*@))
                    {
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(model => model.Id)
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <!--Paso #1-->
                        <div class="row setup-content" id="step-1">
                            <div class="col-xs-12 col-md-offset-0">
                                <div class="col-md-12">
                                    <div class="panel panel-primary">
                                        <div class="panel-heading">
                                            <i class="fa fa-pencil-square-o fa-lg"></i>
                                        </div>
                                        <div class="container" style="margin-top:20px;">
                                            <h2>Datos de Adenda</h2>
                                            <hr class="ibox-hr" />
                                        </div>
                                        <!--Contenido de la caja-->
                                        <div class="panel-body">
                                            <!--Caja interna para división-->
                                            <div class="row">
                                                <div class="col-lg-6 b-r">
                                                    <div class="form-group">
                                                        @Html.LabelFor(model => model.NumAdenda, new { @class = "control-label col-md-4" })
                                                        <div class="col-md-8">
                                                            @Html.EditorFor(model => model.NumAdenda, new { htmlAttributes = new { @class = "form-control", @id = "txtNumAdendaA" } })
                                                            @Html.ValidationMessageFor(model => model.NumAdenda, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                    <br /><br />
                                                    <div class="form-group">
                                                        @Html.LabelFor(model => model.TipoAdenda, new { @class = "control-label col-md-4" })
                                                        <div class="col-md-8">
                                                            @Html.EditorFor(model=> model.TipoAdenda, new { htmlAttributes = new { @class = "form-control",@readonly = "true" } })
                                                            @Html.ValidationMessageFor(model => model.TipoAdenda, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                    <br /><br />
                                                    <div class="form-group">
                                                        @Html.LabelFor(model => model.FechaEmision, new { @class = "control-label col-md-4" })
                                                        <div class="col-md-8">
                                                            @Html.EditorFor(model => model.FechaEmision, new { htmlAttributes = new { @class = "form-control", @id = "txtFechaEmisionA", @onchange="ObtenerCambio()" } })
                                                            @Html.ValidationMessageFor(model => model.FechaEmision, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                    <br /><br />
                                                    <div class="form-group">
                                                        @Html.LabelFor(model => model.FechaDesde, new { @class = "control-label col-md-4" })
                                                        <div class="col-md-8">
                                                            @Html.EditorFor(model => model.FechaDesde, new { htmlAttributes = new { @class = "form-control", @id = "txtFechaDesdeA" } })
                                                            @Html.ValidationMessageFor(model => model.FechaDesde, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                    <br /><br />
                                                    <div class="form-group">
                                                        @Html.LabelFor(model => model.FechaHasta, new { @class = "control-label col-md-4" })
                                                        <div class="col-md-8">
                                                            @Html.EditorFor(model => model.FechaHasta, new { htmlAttributes = new { @class = "form-control", @id = "txtFechaHastaA" } })
                                                            @Html.ValidationMessageFor(model => model.FechaHasta, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                    <br /><br />
                                                    <div class="form-group">
                                                        @Html.LabelFor(model => model.TipoDeCambio, new { @class = "control-label col-md-4" })
                                                        <div class="col-md-8">
                                                            @Html.EditorFor(model => model.TipoDeCambio, new { htmlAttributes = new { @class = "form-control", @id = "txtTipoCambioA", @readonly = "true" } })
                                                            @Html.ValidationMessageFor(model => model.TipoDeCambio, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                </div> <!--termina contenedor de la primera división-->
                                                <!--Segundo contenedor-->
                                                <div class="col-lg-6">
                                                    <!--Título del segundo contenedor-->

                                                    <div class="form-group">
                                                        @Html.LabelFor(model => model.SumaAsegurada, new { @class = "control-label col-md-4" })
                                                        <div class="col-md-8">
                                                            @Html.EditorFor(model => model.SumaAsegurada, new { htmlAttributes = new { @class = "form-control", @id = "txtSumaAseguradaA" } })
                                                            @Html.ValidationMessageFor(model => model.SumaAsegurada, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                    <br /><br />
                                                    <div class="form-group">
                                                        @Html.LabelFor(model => model.PrimaNeta, new { @class = "control-label col-md-4" })
                                                        <div class="col-md-8">
                                                            @Html.EditorFor(model => model.PrimaNeta, new { htmlAttributes = new { @class = "form-control", @id = "txtPrimaNetaA", @onkeyup = "IVA()" } })
                                                            @Html.ValidationMessageFor(model => model.PrimaNeta, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                    <br /><br />
                                                    <div class="form-group">
                                                        @Html.LabelFor(model => model.Iva, new { @class = "control-label col-md-4" })
                                                        <div class="col-md-8">
                                                            @Html.EditorFor(model => model.Iva, new { htmlAttributes = new { @class = "form-control", @id = "txtIvaA" } })
                                                            @Html.ValidationMessageFor(model => model.Iva, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                    <br /><br />
                                                    <div class="form-group">
                                                        @Html.LabelFor(model => model.Otros, new { @class = "control-label col-md-4" })
                                                        <div class="col-md-8">
                                                            @Html.EditorFor(model => model.Otros, new { htmlAttributes = new { @class = "form-control", @id = "txtOtrosA" } })
                                                            @Html.ValidationMessageFor(model => model.Otros, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                    <br /><br />
                                                    <div class="form-group">
                                                        @Html.LabelFor(model => model.ComisionEspecial, new { @class = "control-label col-md-4" })
                                                        <div class="col-md-8">
                                                            @Html.EditorFor(model => model.ComisionEspecial, new { htmlAttributes = new { @class = "form-control", @id = "txtComisionA" } })
                                                            @Html.ValidationMessageFor(model => model.ComisionEspecial, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                    <br /><br />
                                                    <div class="form-group">
                                                        @Html.LabelFor(model => model.Comentario, new { @class = "control-label col-md-4" })
                                                        <div class="col-md-8">
                                                            @Html.EditorFor(model => model.Comentario, new { htmlAttributes = new { @class = "form-control", @id = "txtComisionA" } })
                                                            @Html.ValidationMessageFor(model => model.Comentario, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                    @Html.HiddenFor(model => model.PolizaId)
                                                </div> <!--termina el segundo contenedor-->
                                            </div> <!--termina caja para división-->
                                            <button class="btn btn-primary nextBtn pull-right" type="button" style="margin-top:1.7em;">Siguiente</button>

                                        </div> <!--termina contenido de la caja-->
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!--Paso #2-->
                        <div class="row setup-content" id="step-2">
                            <div class="col-xs-12 col-md-offset-0">
                                <div class="col-md-12">
                                    <div class="panel panel-primary">
                                        <div class="panel-heading">
                                            <i class="fa fa-pencil-square-o fa-lg"></i>
                                        </div>
                                        <!--Contenido de la caja-->
                                        <div class="panel-body">
                                            <!--Título del contenedor-->
                                            <div class="container" style="margin-top:20px;">
                                                <h2>Detalle de Cuotas</h2>
                                                <h3 id="lblRecibo"></h3>
                                                <a class="btn btn-success fa fa-list dim pull-right" data-toggle="modal" data-target="#modal-cuotas" style="float: right;margin-top: -2.5em;margin-left: 1em;" id="btnAgregarCuotasE"> &nbsp; &nbsp; Generar cuotas</a>
                                                <hr class="ibox-hr" />
                                            </div> <!--Fin del titulo-->
                                            <!--TABLA DE DETALLE DE CUOTAS-->
                                            <div class="panel-footer">
                                                <div class="table-responsive">
                                                    <table class="table" id="tableCuotasEditar">
                                                        <thead>
                                                            <tr>
                                                                <th>Cuota</th>
                                                                <th>Vence</th>
                                                                <th>Monto</th>
                                                                <th>Estado</th>
                                                                <th>Acciones</th>
                                                            </tr>
                                                        </thead>
                                                    </table>
                                                </div>
                                            </div>
                                            <!--FIN DE TABLA DE DETALLE DE CUOTAS-->
                                            <button class="btn btn-primary backBtn pull-left" type="button" style="float:left; margin-top:1.7em;">Regresar</button>
                                            <button class="btn btn-primary pull-right" type="submit" style="margin-top:1.7em;"> Guardar </button>

                                        </div> <!--termina contenido de la caja-->
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!--Modal para editar una cuota-->
<div class="modal inmodal fade" id="myModalCuotas" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-md">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                <h4 class="modal-title">Cuota</h4>

            </div>
            <div class="modal-body">

                @Html.Partial("_EditarCuotasPoliza")

            </div>
            <div class="modal-footer">
                <button type="button" onclick="" class="btn btn-success pull-right" id="btnActualizarCuota" style="display:none;">Guardar</button>
            </div>
        </div>
    </div>
</div>

<!--Modal para volver a generar cuotas-->
<div class="modal inmodal fade" id="modal-cuotas" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-md">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title">Generar Cuotas</h4>
            </div>
            <div class="modal-body">
                @Html.Partial("_GenerarCuotas")
            </div>
            <div class="modal-footer">
                <button type="button" onclick="GenerarCuotasEditar()" class="btn btn-success pull-right" id="btnGenerarE">Generar</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<!-- Datatable -->
<link href="~/Content/DataTables/media/css/dataTables.bootstrap.min.css" rel="stylesheet" />
<link href="~/Content/DataTables/media/css/jquery.dataTables.min.css" rel="stylesheet" />
<link href="~/Content/DataTables/media/css/dataTables.jqueryui.min.css" rel="stylesheet" />
<script src="~/Scripts/DataTables/media/js/dataTables.bootstrap.min.js"></script>
<script src="~/Scripts/DataTables/media/js/dataTables.jqueryui.min.js"></script>
<script src="~/Scripts/DataTables/media/js/jquery.dataTables.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"> </script>

<script>
            $(document).ready(function () {
                var navListItems = $('div.setup-panel div a'),
                        allWells = $('.setup-content'),
                        allNextBtn = $('.nextBtn'),
                        allBackButton = $('.backBtn');

                allWells.hide();

                navListItems.click(function (e) {
                    e.preventDefault();
                    var $target = $($(this).attr('href')),
                            $item = $(this);

                    if (!$item.hasClass('disabled')) {
                        navListItems.removeClass('btn-primary').addClass('btn-default');
                        $item.addClass('btn-primary');
                        allWells.hide();
                        $target.show();
                        $target.find('input:eq(0)').focus();
                    }
                });
                allBackButton.click(function () {
                    var curStep = $(this).closest(".setup-content"),
                        curStepBtn = curStep.attr("id"),
                        nextStepWizard = $('div.setup-panel div a[href="#' + curStepBtn + '"]').parent().prev().children("a"),
                        curInputs = curStep.find("input[type='text'],input[type='url']"),
                        isValid = true;

                    $(".form-group").removeClass("has-error");
                    for (var i = 0; i < curInputs.length; i++) {
                        if (!curInputs[i].validity.valid) {
                            isValid = false;
                            $(curInputs[i]).closest(".form-group").addClass("has-error");
                        }
                    }

                    nextStepWizard.removeAttr('disabled').trigger('click');
                });

                allNextBtn.click(function () {
                    var curStep = $(this).closest(".setup-content"),
                        curStepBtn = curStep.attr("id"),
                        nextStepWizard = $('div.setup-panel div a[href="#' + curStepBtn + '"]').parent().next().children("a"),
                        curInputs = curStep.find("input[type='text'],input[type='url']"),
                        isValid = true;

                    $(".form-group").removeClass("has-error");
                    for (var i = 0; i < curInputs.length; i++) {
                        if (!curInputs[i].validity.valid) {
                            isValid = false;
                            $(curInputs[i]).closest(".form-group").addClass("has-error");
                        }
                    }

                    if (isValid)
                        nextStepWizard.removeAttr('disabled').trigger('click');
                });


                $('div.setup-panel div a.btn-primary').trigger('click');
            });
</script>

    <script>
        function ObtenerCambio() {
            var url = "/Polizas/GetTipoDeCambio/";
            $.ajax({
                type: "GET",
                url: url,
                data: {fecha : $("#txtFechaEmisionA").val()},
                dataType: "JSON",
                success: function (list) {
                    $("#txtTipoCambioA").val(list.s);
                }
            })
        }

        // Referencia la tabla de detalles
        var dataTableDetalle = null;
        // Crea una instancia de datatable para el detalle
        $(function () {
            // Instancia del datatable para mostrar los detalles de cuotas.
            dataTableDetalle = $("#tableCuotasEditar").DataTable({
                "info": false,
                "paging": false,
                "ordering": false,
                "searching": false,
                "language": {
                    "emptyTable": "Agregue cuotas",
                    "search": "Busqueda"
                }, "columnDefs": [{
                    "targets": 4,
                    "render": function (data, type, row, meta) {
                        return "<button class='btn btn-sm btn-danger' data-toggle='modal' data-target='#myModalCuotas' value='" + data + "' type='button'>Editar</button>";
                    }
                }]
            });
        });
        

        //**************************************************************************************************************************************************
        //************************************************************************ ARCHIVO GUARDAR, MOSTRAR BOTON, ELIMINAR ARCHIVO***********************************

        //Evento para cargar el detalle de cuotas
        $(function () {
            var AdendaId = @Model.Id;
            var url = "/Adendas/RecuperarCuotas/" + AdendaId;
            $.ajax({
                type: "GET",
                url: url,
                dataType: "JSON",
                success: function (list) {
                    for (x = 0; x < list.list.length; x++) {
                        dataTableDetalle.row.add([
                               list.list[x].Cuotas,
                               list.list[x].Vence,
                               list.list[x].Monto,
                               list.list[x].Estado,
                               list.list[x].IdDetalle]).draw(false);
                    }
                    $("#lblRecibo").text("Recibo de Prima: " + list.list[0].Recibo);
                }
            });
        });

        //***********************************************************************************************
        //================================================CUOTAS==========================================
        var datosCuota = null;

        $(function () {
            var botonRandom0 = null;
            $("#tableCuotasEditar tbody").on('click', 'button', function () {
                datosCuota = dataTableDetalle.row($(this).parents('tr')).data();
                if (datosCuota[3] == "Abonado" || datosCuota[3] == "Pagado") {
                    swal("No es posible editar. Esta cuota ya ha sido pagada o abonada.", "Seguros & Más", "warning")
                        .then((willDelete) => {
                            $("#myModalCuotas .close").click();
                        });
                }
                else {
                    $("#btnActualizarCuota").show();
                    botonRandom0 = $(this);
                    var buscar = "/Adendas/DetalleCuota/";

                    //Recuperamos los datos de la tupla a editar
                    $.ajax({
                        type: "GET",
                        url: buscar,
                        dataType: "JSON",
                        data:
                        {
                            idDetalle: datosCuota[4]
                        },
                        success: function (list) {
                            $("#tFecha").val(list.list[0].Fecha);
                            $("#NumCuotaE").val(list.list[0].Num);
                            $("#tMonto").val(list.list[0].Monto);
                            $("#tEstado").val(list.list[0].Estado);
                        }
                    });
                }
                
            });
        });

        //Almacenar cambios
        $("#btnActualizarCuota").click(function () {
            if($("#tFecha").val().trim() && $("#tMonto").val().trim())
            {
                $("#myModalCuotas .close").click();
                var act = "/Adendas/GuardarCambioCuotas/"

                $.ajax({
                    type: "POST",
                    url: act,
                    dataType: "JSON",
                    //asignamos los parámetros que va a recibir el controlador
                    data: {
                        idDetalle: datosCuota[4],
                        fecha: $("#tFecha").val(),
                        monto: $("#tMonto").val()
                    },
                    success: function () {
                        //Cuando se haya almacenado la modificación recuperamos nuevamente los datos
                        var AdendaId = @Model.Id;
                        var url = "/Adendas/RecuperarCuotas/" + AdendaId;
                        $.ajax({
                            type: "GET",
                            url: url,
                            dataType: "JSON",
                            success: function (list) {
                                dataTableDetalle.clear();
                                for (x = 0; x < list.list.length; x++) {
                                    dataTableDetalle.row.add([
                                           list.list[x].Cuotas,
                                           list.list[x].Vence,
                                           list.list[x].Monto,
                                           list.list[x].Estado,
                                           list.list[x].IdDetalle]).draw(false);
                                }
                            }
                        });
                    }
                })
            }
            else
                swal("Hay campos necesarios en el formulario que aún están vacíos.\nPor favor verifique.", "Seguros & Más", "warning");
        })

        function IVA() {
            if ($("#txtPrimaNetaA").val().trim()) {
                var prima = parseFloat($("#txtPrimaNetaA").val());
                var iva = prima * 0.15;
                iva = parseFloat(iva).toFixed(2)
                $("#txtIvaA").val(iva);
            }
        }

        function cambiarMonto() {
            if ($("#PrimaNeta").val().trim() && $("#NumCuotas").val().trim()) {
                var prima = parseFloat($("#PrimaNeta").val());
                var num = parseInt($("#NumCuotas").val())
                $("#Monto").val(parseFloat(prima / num).toFixed(2));
            }
        }

        //Intento hacer que se bloquee el numero de cuotas según lo que el select tenga xD
        $("#TipoCuotas").change(function () {
            if ($(this).val() == "valor2")
                $("#NumCuotas").val("").prop("readonly", false);
            else{
                $("#Monto").val($("#PrimaNeta").val());
                $("#NumCuotas").val(1).prop("readonly", true);
            }
        });

        $("#btnAgregarCuotasE").click(function(){
            $("#TipoCuotas").val("valor1");
            $("#TipoCuotas").change();
            if ($("#txtPrimaNetaA").val().trim() &&
                       $("#txtIvaA").val().trim() &&
                       $("#txtOtrosA").val().trim()) {

                var neta = parseFloat($("#txtPrimaNetaA").val());
                var iva = parseFloat($("#txtIvaA").val());
                var otros = parseFloat($("#txtOtrosA").val());
                $("#PrimaNeta").val(neta + iva + otros);

                var prima = parseFloat($("#PrimaNeta").val());
                var num = parseInt($("#NumCuotas").val())
                $("#Monto").val(parseFloat(prima / num).toFixed(2));
            }
        })

        function GenerarCuotasEditar(){
            if($("#NumCuotas").val().trim() && $("#Vence").val().trim() && $("#Monto").val().trim())
            {
                $("#modal-cuotas .close").click();
                var AdendaId = @Model.Id;
                var url = "/Adendas/ActualizarCuotas/";
                $.ajax({
                    type: "GET",
                    url: url,
                    datatype: "JSON",
                    data:{
                        IdAdenda: AdendaId,
                        numcuotas: $("#NumCuotas").val(),
                        vence: $("#Vence").val(),
                        monto: $("#Monto").val(),
                        recibo: $("#ReciboP").val()
                    },
                    success: function()
                    {
                        dataTableDetalle.clear();
                        var url = "/Adendas/RecuperarCuotas/" + AdendaId;
                        $.ajax({
                            type: "GET",
                            url: url,
                            dataType: "JSON",
                            success: function (list) {
                                for (x = 0; x < list.list.length; x++) {
                                    dataTableDetalle.row.add([
                                           list.list[x].Cuotas,
                                           list.list[x].Vence,
                                           list.list[x].Monto,
                                           list.list[x].Estado,
                                           list.list[x].IdDetalle]).draw(false);
                                }
                                $("#lblRecibo").text("Recibo de Prima: " + list.list[0].Recibo);
                            }
                        });
                    }
                })
            }
            else
                swal("Hay campos necesarios en el formulario que aún están vacíos.\nPor favor verifique.", "Seguros & Más", "warning");
        };

        function Valor() {
            $.ajax({
                url: "/Adendas/SetValue/" + @Model.Id,
                type: "GET",
                success: function (data) {
                }
            });
        }
    </script>
}
