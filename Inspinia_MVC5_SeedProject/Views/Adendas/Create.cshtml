@model Inspinia_MVC5_SeedProject.Models.Adenda

@{
    ViewBag.Title = "Create";
}

<style>
    #initialihiddenbutton {
        display: none;
    }


    .ibox-hr {
        -moz-border-bottom-colors: none;
        -moz-border-left-colors: none;
        -moz-border-right-colors: none;
        -moz-border-top-colors: none;
        background-color: #ffffff;
        border-color: #e7eaec;
        border-image: none;
        border-style: solid solid none;
        border-width: 2px 0 0;
        color: inherit;
        margin-bottom: 0;
        padding: 0;
        min-height: 48px;
    }

    p {
        font-weight: 400 !important;
    }

    h2 {
        font-size: 26px !important;
        font-weight: 600 !important;
    }


    .container {
        width: 97% !important;
    }

    .btn-default {
        background: #818e99 !important;
        color: white !important;
        opacity: inherit !important;
    }

    .stepwizard .btn-primary {
        background-color: #428bca !important;
        color: white !important;
    }


    .stepwizard-step p {
        margin-top: 0px;
    }

    .stepwizard-row {
        display: table-row;
    }

    .stepwizard {
        display: table;
        width: 100%; /*Cambié esta del 82% al 100% para mejorarlo*/
        position: relative;
    }

    .stepwizard-step button[disabled] {
        opacity: 1 !important;
        filter: alpha(opacity=100) !important;
    }

    .stepwizard-row:before {
        top: 14px;
        bottom: 0;
        position: absolute;
        content: " ";
        width: 100%;
        height: 1px;
        background-color: #ccc;
        z-index: 0;
    }

    .stepwizard-step {
        display: table-cell;
        text-align: center;
        position: relative;
    }

    .btn-circle {
        width: 30px;
        height: 30px;
        text-align: center;
        padding: 6px 0;
        font-size: 12px;
        line-height: 1.428571429;
        border-radius: 15px;
    }
</style>

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-sm-4">
        <h2>Adendas</h2>
        <ol class="breadcrumb">
            <li>
                @Html.ActionLink("Lista", "Index")
            </li>
            <li class="active">
                <strong>Crear</strong>
            </li>
        </ol>
    </div>
    <div class="col-sm-8">
        <div class="title-action">
            <a class="btn btn-success btn-outline dim" href="@Url.Action("Index","Adendas")"><i class="fa fa-arrow-left"></i>&nbsp;&nbsp;Regresar</a>
            <a class="btn btn-success btn-outline dim" href="@Url.Action("CreateAdendas","BienesAsegurados")" onclick="Valor()"><i class="fa fa-file-text-o"></i>&nbsp;&nbsp;Bienes</a>
            @*<a class="btn btn-success btn-outline fa fa-file-image-o dim" href="@Url.Action("Create","ArchivosAdendas")">&nbsp;&nbsp;Archivos</a>*@
        </div>
    </div>
</div>



<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h5>Ingresar Adenda</h5>
                </div>
                <div class="ibox-content">
                    
                    <!--Nav de steps-->
                    <div class="container">
                        <div class="stepwizard">
                            <div class="stepwizard-row setup-panel">
                                <div class="stepwizard-step col-xs-4">
                                    <a href="#step-1" type="button" class="btn btn-primary btn-circle">1</a>
                                    <p>Póliza</p>
                                </div>
                                <div class="stepwizard-step col-xs-4">
                                    <a href="#step-2" type="button" class="btn btn-default btn-circle" @*disabled="disabled"*@>2</a>
                                    <p>Adenda</p>
                                </div>
                                <div class="stepwizard-step col-xs-4">
                                    <a href="#step-3" type="button" class="btn btn-default btn-circle" @*disabled="disabled"*@>3</a>
                                    <p>Cuotas</p>
                                </div>
                            </div>
                        </div>
                    </div> <!--Finaliza el nav de steps-->
                    <br />                    
                    
                    
                @using (Html.BeginForm("Create", "Adendas", FormMethod.Post, new { @onsubmit = "return AgregarDatos(this)" })) 
                {
                    @Html.AntiForgeryToken()
    
                    <div class="form-horizontal">
                        @Html.ValidationSummary(false)

                        <!--Paso #1-->
                        <div class="row setup-content" id="step-1">
                            <div class="col-md-offset-0">
                                <div class="col-md-12">
                                    <div class="panel panel-primary">
                                        <div class="panel-heading">
                                            <i class="fa fa-pencil-square-o fa-lg"></i>
                                            <div class="button-group">
                                                <button class="btn btn-danger fa fa-times " type="button" onclick="limpiar()" style="float: right;margin-top: -1.7em;margin-left: 1em;" id="initialihiddenbutton">&nbsp;&nbsp;Cancelar</button>
                                                <button class="btn btn-success fa fa-search" data-toggle="modal" data-target="#modal-poliza" type="button" style="float: right;margin-top:-1.7em; margin-left:1em">&nbsp;&nbsp;Buscar</button>
                                            </div>
                                        </div>
                                        <div class="container" style="margin-top:20px;">
                                            <h2>Seleccione la Póliza</h2>
                                            <hr class="ibox-hr" />
                                        </div>

                                        <div class="panel-body">
                                            
                                            <div class="col-md-12">
                                                <div class="form-group">
                                                    <label class="control-label col-md-2" for="NombreCompleto">Nombre del Cliente</label>
                                                    <div class="col-md-10">
                                                        <input id="NombreCompleto" name="NombreCompleto" class="form-control" readonly />
                                                    </div>
                                                </div>
                                            </div>
                                            <br /><br /><br />

                                            <div class="col-md-6">
                                                <div class="form-group">
                                                    <label class="control-label col-md-4" for="Ident">Identificación del Cliente</label>
                                                    <div class="col-md-8">
                                                        <input id="Ident" name="Ident" class="form-control" readonly />
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="form-group">
                                                    <label class="control-label col-md-4" for="NumPoliza">Número de Póliza</label>
                                                    <div class="col-md-8">
                                                        <input id="NumPoliza" name="NumPoliza" class="form-control" readonly />
                                                    </div>
                                                </div>
                                            </div>
                                            <br /><br /><br />
                                            <div class="col-md-6">
                                                <div class="form-group">
                                                    <label class="control-label col-md-4" for="Producto">Producto</label>
                                                    <div class="col-md-8">
                                                        <input id="Producto" name="Producto" class="form-control" readonly />
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="col-md-6">
                                                <div class="form-group">
                                                    <label class="control-label col-md-4" for="Aseguradora">Aseguradora</label>
                                                    <div class="col-md-8">
                                                        <input id="Aseguradora" name="Aseguradora" class="form-control" readonly />
                                                    </div>
                                                </div>
                                            </div>
                                            <br /><br />
                                            <button class="btn btn-primary nextBtn pull-right" type="button" style="margin-top:1.7em;">
                                                Siguiente
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!--Paso #2-->
                        <div class="row setup-content" id="step-2">
                            <div class="col-xs-12 col-md-offset-0">
                                <div class="col-md-12">
                                    <div class="panel panel-primary">
                                        <div class="panel-heading">
                                            <i class="fa fa-pencil-square-o fa-lg"></i>
                                        </div>
                                        <div class="container" style="margin-top:20px;">
                                            <h2>Datos de Adenda</h2>
                                            <hr class="ibox-hr" />
                                        </div>
                                        <!--Contenido de la caja-->
                                        <div class="panel-body">
                                            <!--Caja interna para división-->
                                            <div class="row">
                                                <div class="col-lg-6 b-r">
                                                    <div class="form-group">
                                                        @Html.LabelFor(model => model.NumAdenda, new { @class = "control-label col-md-4" })
                                                        <div class="col-md-8">
                                                            @Html.EditorFor(model => model.NumAdenda, new { htmlAttributes = new { @class = "form-control", @id = "txtNumAdendaA"} })
                                                            @Html.ValidationMessageFor(model => model.NumAdenda, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>

                                                    <div class="form-group">
                                                        @Html.LabelFor(model => model.TipoAdenda, new { @class = "control-label col-md-4" })
                                                        <div class="col-md-8">
                                                            @Html.DropDownList("TipoAdenda", (SelectList)ViewBag.TiposAdenda, htmlAttributes: new { @class = "form-control", @id = "dropTipoAdendaA", @onchange="Bienes()" })
                                                            @Html.ValidationMessageFor(model => model.TipoAdenda, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>

                                                    <div class="form-group">
                                                        @Html.LabelFor(model => model.FechaEmision, new { @class = "control-label col-md-4" })
                                                        <div class="col-md-8">
                                                            @Html.EditorFor(model => model.FechaEmision, new { htmlAttributes = new { @class = "form-control", @id = "txtFechaEmisionA", @onchange="ObtenerCambio()" } })
                                                            @Html.ValidationMessageFor(model => model.FechaEmision, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>

                                                    <div class="form-group">
                                                        @Html.LabelFor(model => model.FechaDesde, new { @class = "control-label col-md-4" })
                                                        <div class="col-md-8">
                                                            @Html.EditorFor(model => model.FechaDesde, new { htmlAttributes = new { @class = "form-control", @id = "txtFechaDesdeA" } })
                                                            @Html.ValidationMessageFor(model => model.FechaDesde, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>

                                                    <div class="form-group">
                                                        @Html.LabelFor(model => model.FechaHasta, new { @class = "control-label col-md-4" })
                                                        <div class="col-md-8">
                                                            @Html.EditorFor(model => model.FechaHasta, new { htmlAttributes = new { @class = "form-control", @id = "txtFechaHastaA" } })
                                                            @Html.ValidationMessageFor(model => model.FechaHasta, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                    <div class="form-group">
                                                        @Html.LabelFor(model => model.TipoDeCambio, new { @class = "control-label col-md-4" })
                                                        <div class="col-md-8">
                                                            @Html.EditorFor(model => model.TipoDeCambio, new { htmlAttributes = new { @class = "form-control", @id = "txtTipoCambioA", @readonly = "true" } })
                                                            @Html.ValidationMessageFor(model => model.TipoDeCambio, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                </div> <!--termina contenedor de la primera división-->

                                                <!--Segundo contenedor-->
                                                <div class="col-lg-6">
                                                    <!--Título del segundo contenedor-->

                                                    <div class="form-group">
                                                        @Html.LabelFor(model => model.SumaAsegurada, new { @class = "control-label col-md-4" })
                                                        <div class="col-md-8">
                                                            @Html.EditorFor(model => model.SumaAsegurada, new { htmlAttributes = new { @class = "form-control", @id = "txtSumaAseguradaA" } })
                                                            @Html.ValidationMessageFor(model => model.SumaAsegurada, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>

                                                    <div class="form-group">
                                                        @Html.LabelFor(model => model.PrimaNeta, new { @class = "control-label col-md-4" })
                                                        <div class="col-md-8">
                                                            @Html.EditorFor(model => model.PrimaNeta, new { htmlAttributes = new { @class = "form-control", @id = "txtPrimaNetaA", @onkeyup = "IVA()" } })
                                                            @Html.ValidationMessageFor(model => model.PrimaNeta, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>

                                                    <div class="form-group">
                                                        @Html.LabelFor(model => model.Iva, new { @class = "control-label col-md-4" })
                                                        <div class="col-md-8">
                                                            @Html.EditorFor(model => model.Iva, new { htmlAttributes = new { @class = "form-control", @id = "txtIvaA" } })
                                                            @Html.ValidationMessageFor(model => model.Iva, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>

                                                    <div class="form-group">
                                                        @Html.LabelFor(model => model.Otros, new { @class = "control-label col-md-4" })
                                                        <div class="col-md-8">
                                                            @Html.EditorFor(model => model.Otros, new { htmlAttributes = new { @class = "form-control", @id = "txtOtrosA" } })
                                                            @Html.ValidationMessageFor(model => model.Otros, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>

                                                    <div class="form-group">
                                                        @Html.LabelFor(model => model.ComisionEspecial, new { @class = "control-label col-md-4" })
                                                        <div class="col-md-8">
                                                            @Html.EditorFor(model => model.ComisionEspecial, new { htmlAttributes = new { @class = "form-control", @id = "txtComisionA" } })
                                                            @Html.ValidationMessageFor(model => model.ComisionEspecial, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>

                                                    <div class="form-group">
                                                        @Html.LabelFor(model => model.Comentario, new { @class = "control-label col-md-4" })
                                                        <div class="col-md-8">
                                                            @Html.EditorFor(model => model.Comentario, new { htmlAttributes = new { @class = "form-control", @id = "txtComentarioA" } })
                                                            @Html.ValidationMessageFor(model => model.Comentario, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                    <input id="txtReciboPrima" name="ReciboPrima" hidden />
                                                </div> <!--termina el segundo contenedor-->
                                            </div> <!--termina caja para división-->

                                            <button class="btn btn-primary backBtn pull-left" type="button" style="float:left; margin-top:1.7em;">Regresar</button>
                                            <button class="btn btn-primary nextBtn pull-right" type="button" style="margin-top:1.7em;">Siguiente</button>

                                        </div> <!--termina contenido de la caja-->
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!--Paso #3-->
                        <div class="row setup-content" id="step-3">
                            <div class="col-md-offset-0">
                                <div class="col-md-12">
                                    <div class="panel panel-primary">
                                        <div class="panel-heading">
                                            <i class="fa fa-pencil-square-o fa-lg"></i>
                                        </div>
                                        <div class="container" style="margin-top:20px;">
                                            <h2>Detalle de Cuotas</h2>
                                            <a class="btn btn-success fa fa-plus dim pull-right" data-toggle="modal" data-target="#modal-cuotas" style="float: right;margin-top: -2.5em;margin-left: 1em;" id="btnAgregarCuotas"> &nbsp; &nbsp; Agregar </a>
                                            <hr class="ibox-hr" />
                                        </div>

                                        <div class="panel-body">
                                            <!--TABLA DE DETALLE DE CUOTAS-->
                                            <div class="panel-footer">
                                                <div class="table-responsive">
                                                    <table class="table" id="tableCuotas">
                                                        <thead>
                                                            <tr>
                                                                <th>Cuota</th>
                                                                <th>Vence</th>
                                                                <th>Monto</th>
                                                                <th>Estado</th>
                                                            </tr>
                                                        </thead>
                                                    </table>
                                                </div>
                                            </div>
                                            <!--FIN DE TABLA DE DETALLE DE CUOTAS-->
                                            <button class="btn btn-primary backBtn pull-left" type="button" style="float:left; margin-top:1.7em;">Regresar</button>
                                            <button class="btn btn-primary nextBtn pull-right" type="submit" style="margin-top:1.7em;"> Guardar</button>                              
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }

                </div>
            </div>
        </div>
    </div>
 </div>

 
<!--Modal para generar cuotas-->
<div class="modal inmodal fade" id="modal-cuotas" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-md">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title">Generar Cuotas</h4>
            </div>
            <div class="modal-body">
                @Html.Partial("_GenerarCuotas")
            </div>
            <div class="modal-footer">
                <button type="button" onclick="agregarCuotas()" class="btn btn-success pull-right" id="btnGenerar">Generar</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>

@*Modal para buscar una póliza*@
<div class="modal inmodal fade" id="modal-poliza" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title">Pólizas</h4>
            </div>
            <div class="modal-body">
                @Html.Partial("_BuscarPoliza")
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>  

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <!-- Datatable -->
    <link href="~/Content/DataTables/media/css/dataTables.bootstrap.min.css" rel="stylesheet" />
    <link href="~/Content/DataTables/media/css/jquery.dataTables.min.css" rel="stylesheet" />
    <link href="~/Content/DataTables/media/css/dataTables.jqueryui.min.css" rel="stylesheet" />
    <script src="~/Scripts/DataTables/media/js/dataTables.bootstrap.min.js"></script>
    <script src="~/Scripts/DataTables/media/js/dataTables.jqueryui.min.js"></script>
    <script src="~/Scripts/DataTables/media/js/jquery.dataTables.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"> </script>


    <!-- Script para el paso a paso.-->
<script>
            $(document).ready(function () {
                var navListItems = $('div.setup-panel div a'),
                        allWells = $('.setup-content'),
                        allNextBtn = $('.nextBtn'),
                        allBackButton = $('.backBtn');

                allWells.hide();

                navListItems.click(function (e) {
                    e.preventDefault();
                    var $target = $($(this).attr('href')),
                            $item = $(this);

                    if (!$item.hasClass('disabled')) {
                        navListItems.removeClass('btn-primary').addClass('btn-default');
                        $item.addClass('btn-primary');
                        allWells.hide();
                        $target.show();
                        $target.find('input:eq(0)').focus();
                    }
                });
                allBackButton.click(function () {
                    var curStep = $(this).closest(".setup-content"),
                        curStepBtn = curStep.attr("id"),
                        nextStepWizard = $('div.setup-panel div a[href="#' + curStepBtn + '"]').parent().prev().children("a"),
                        curInputs = curStep.find("input[type='text'],input[type='url']"),
                        isValid = true;

                    $(".form-group").removeClass("has-error");
                    for (var i = 0; i < curInputs.length; i++) {
                        if (!curInputs[i].validity.valid) {
                            isValid = false;
                            $(curInputs[i]).closest(".form-group").addClass("has-error");
                        }
                    }

                    nextStepWizard.removeAttr('disabled').trigger('click');
                });

                allNextBtn.click(function () {
                    var curStep = $(this).closest(".setup-content"),
                        curStepBtn = curStep.attr("id"),
                        nextStepWizard = $('div.setup-panel div a[href="#' + curStepBtn + '"]').parent().next().children("a"),
                        curInputs = curStep.find("input[type='text'],input[type='url']"),
                        isValid = true;

                    $(".form-group").removeClass("has-error");
                    for (var i = 0; i < curInputs.length; i++) {
                        if (!curInputs[i].validity.valid) {
                            isValid = false;
                            $(curInputs[i]).closest(".form-group").addClass("has-error");
                        }
                    }

                    if (isValid)
                        nextStepWizard.removeAttr('disabled').trigger('click');
                });


                $('div.setup-panel div a.btn-primary').trigger('click');
            });
</script>

    <script>
        $(document).ready(function () {
            $("#dropTipoAdendaA").select2({ width: "100%" });
            var d = new Date();

            var month = d.getMonth() + 1;
            var day = d.getDate();

            var output = d.getFullYear() + '-' +
                (month < 10 ? '0' : '') + month + '-' +
                (day < 10 ? '0' : '') + day;
            $("#txtFechaEmisionA").val(output).change();
        });

        $("#btnAgregarCuotas").click(function () {
            $("#TipoCuotas").val("valor1");
            $("#TipoCuotas").change();
            if ($("#txtPrimaNetaA").val().trim() &&
                $("#txtIvaA").val().trim() &&
                $("#txtOtrosA").val().trim()) {

                var neta = parseFloat($("#txtPrimaNetaA").val());
                var iva = parseFloat($("#txtIvaA").val());
                var otros = parseFloat($("#txtOtrosA").val());
                $("#PrimaNeta").val(neta + iva + otros);

                var prima = parseFloat($("#PrimaNeta").val());
                var num = parseInt($("#NumCuotas").val())
                $("#Monto").val(parseFloat(prima / num).toFixed(2));
            }
            else {
                swal({
                    title: "Hay campos necesarios en el formulario que aún están vacíos.\nPor favor verifique.",
                    text: "Seguros & Más",
                    icon: "warning",
                    buttons: "Ok",
                    dangerMode: true,
                })
                    .then((willDelete) => {
                        if (willDelete) { $("#modal-cuotas .close").click(); }
                    });
            }
        })

        function cambiarMonto() {
            if ($("#PrimaNeta").val().trim() && $("#NumCuotas").val().trim()) {
                var prima = parseFloat($("#PrimaNeta").val());
                var num = parseInt($("#NumCuotas").val());
                $("#Monto").val(parseFloat(prima / num).toFixed(2));
            }
        }

        function IVA() {
            if ($("#txtPrimaNetaA").val().trim()) {
                var prima = parseFloat($("#txtPrimaNetaA").val());
                var iva = prima * 0.15;
                iva = parseFloat(iva).toFixed(2)
                $("#txtIvaA").val(iva);
            }
        }

        function ObtenerCambio() {
            var url = "/Polizas/GetTipoDeCambio/";
            $.ajax({
                type: "GET",
                url: url,
                data: { fecha: $("#txtFechaEmisionA").val() },
                dataType: "JSON",
                success: function (list) {
                    $("#txtTipoCambioA").val(list.s);
                }
            })
        }

        //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        //===================================================================POLIZAS=========================================================================
        // Instancia de dataTable para la tabla que muestra las pólizas
        var dataTable = null;

        $(function () {
            ObtenerCambio();
            dataTable = $("#BuscarPoliza").DataTable({
                "ajax": {
                    "url": "@Url.Action("getPolizas", "BienesAsegurados")",
                "type": "POST",
                "dataType": "Json"
            }, "columns": [
            {
                "data": "IdPoliza", "render": function (data) {
                    return "<button class='btn btn-success' value='" + data + "'>Seleccionar</button>";
                }
            },
            { "data": "NumPoliza" },
            { "data": "Apellidos" },
            { "data": "Nombres" },
            { "data": "Identificacion" },
            { "data": "Producto"},
            { "data": "Aseguradora" },
            ], "language": {
                "sProcessing": "Procesando...",
                "sLengthMenu": "Mostrar _MENU_ registros",
                "sZeroRecords": "No se encontraron resultados",
                "sEmptyTable": "No hay pólizas para mostrar",
                "sInfo": "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
                "sInfoEmpty": "Mostrando registros del 0 al 0 de un total de 0 registros",
                "sInfoFiltered": "(filtrado de un total de _MAX_ registros)",
                "sInfoPostFix": "",
                "sSearch": "Buscar:",
                "sUrl": "",
                "sInfoThousands": ",",
                "sLoadingRecords": "Cargando...",
                "oPaginate": {
                    "sFirst": "Primero",
                    "sLast": "Último",
                    "sNext": "Siguiente",
                    "sPrevious": "Anterior"
                },
                "oAria": {
                    "sSortAscending": ": Activar para ordenar la columna de manera ascendente",
                    "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                }
            }
            });
        });


        $idPolizaSelected = 0;
        // Mostrar el boton agregar solo cuando se seleccione un cliente
        $("#NumPoliza").change(function () {
            if (!$(this).val()) {
                $("#initialihiddenbutton").hide();
            }
            else {
                $("#initialihiddenbutton").show();
            }
        });

        // Evento al hacer click en el boton seleccionar
        $(function () {
            $("#BuscarPoliza tbody").on("click", "button", function () {
                var data = dataTable.row($(this).parents('tr')).data();
                $idPolizaSelected = data.IdPoliza;
                $("#NumPoliza").val(data.NumPoliza).change();
                $("#NombreCompleto").val(data.Nombres + ' ' + data.Apellidos).change();
                //$("#Nombres").val(data.Nombres);
                $("#Ident").val(data.Identificacion);
                $("#Producto").val(data.Producto);
                $("#Aseguradora").val(data.Aseguradora);
                $("#modal-poliza .close").click();
            });
        });

        //Limpiar campos de cliente
        function limpiar()
        {
            $("#NumPoliza").val("").change();
            $("#NombreCompleto").val("");
            //$("#Nombres").val("");
            $("#Ident").val("");
            $("#Producto").val("");
            $("#Aseguradora").val("");
            $idPolizaSelected = 0;
        }
        
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        //===================================================================CUOTAS==========================================================================
        // Referencia la tabla de cuotas
        var dataTableDetalleCuotas = null;
        // Crea una instancia de datatable para el detalle
        $(function () {
            // Instancia del datatable para mostrar los detalles.
            dataTableDetalleCuotas = $("#tableCuotas").DataTable({
                "info": false,
                "paging": false,
                "ordering": false,
                "searching": false,
                "language": {
                    "emptyTable": "Agregue cuotas",
                    "search": "Busqueda"
                }
            });
        });

        //Intento hacer que se bloquee el numero de cuotas según lo que el select tenga xD
        $("#TipoCuotas").change(function () {
            if ($(this).val() == "valor2")
                $("#NumCuotas").val("").prop("readonly", false);
            else {
                $("#Monto").val($("#PrimaNeta").val());
                $("#NumCuotas").val(1).prop("readonly", true);
            }
        });

        //Agregar filas a la tabla
        function agregarCuotas() {
            if ($("#ReciboP").val().trim() &&
                $("#PrimaNeta").val().trim() &&
                     $("#NumCuotas").val().trim() &&
                    $("#TipoCuotas").val().trim() &&
                    $("#Vence").val().trim() &&
                    $("#Monto").val().trim()) {

                    var recibo = $("#ReciboP").val();
                    console.log(recibo);
                    $("#txtReciboPrima").val(recibo);
                    dataTableDetalleCuotas.clear();
                    $("#modal-cuotas .close").click();
                    var suma = 0;
                    var meses = $("#NumCuotas").val();
                    var date = new Date($("#Vence").val());
                    date.setDate(date.getDate() + 1);
                    date.setMonth(date.getMonth() + 1);
                    for (x = 0; x < meses; x++) {
                        date.setMonth(date.getMonth() + x);
                        let dia = ("0" + date.getDate()).slice(-2);
                        let mes = ("0" + date.getMonth()).slice(-2);
                        if (mes == "00") {
                            mes = "12";
                            date.setYear(date.getFullYear() - 1);
                        }
                        let fecha = date.getFullYear() + "/" + mes + "/" + dia;
                        if (mes == "12") {
                            date.setYear(date.getFullYear() + 1);
                        }
                        dataTableDetalleCuotas.row.add([
                               x + 1,
                               fecha,
                               $("#Monto").val(),
                               "Pendiente"]).draw(false);
                        date.setMonth(date.getMonth() - x);
                    }
                } else {
                    swal("Hay campos necesarios en el formulario que aún están vacíos.\nPor favor verifique.", "Seguros & Más", "warning");
                }
        }

        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        //===================================================================GUARDAR==========================================================================
                
        function getCuotas() {
            $detalleCuotas = [];
            var data = dataTableDetalleCuotas.rows().data();
            data.each(function (value, index) {
                item = {};
                // Hacemos un objeto tipo JSON con las descripciones iguales a nuestra clase en C#
                item["Id"] = 0;
                item["Couta"] = value[0];
                item["Vence"] = value[1];
                item["Monto"] = value[2];
                item["Estado"] = value[3];
                item["Cuota"] = null;
                item["Poliza"] = null;
                $detalleCuotas.push(item);
            });
            return JSON.stringify($detalleCuotas);
        }

        $form = null;
        function AgregarDatos(form) {
            $.validator.unobtrusive.parse(form);
            if ($(form).valid() && dataTableDetalleCuotas.rows().count() > 0 && $idPolizaSelected!=0) {
                var data = $(form).serialize() + "&PolizaId=" + $idPolizaSelected + "&ultimo=" + dataTableDetalleCuotas.rows().count() + "&detalleCuotas=" + getCuotas();
                $.ajax({
                    url: form.action,
                    type: "POST",
                    data: data,
                    success: function (data) {
                        if (data.d == -3) {
                            swal("El número de adenda que intenta ingresar ya existe.", "Seguros & Más", "error");
                        }
                        else
                            if (data.d > 0) {
                                window.location.href = '/Adendas/Create';
                            }
                            else
                                swal("Hubo un error al intentar guardar.", "Seguros & Más", "error");
                    }
                });
            } else {
                $detalle = [];
                swal("Aún faltan datos.\nPor favor verifique.", "Seguros & Más", "error");
                return false;
            }
            return false;
        }

        $(document).ready(function () {
            $.ajax({
                url: "/Polizas/GetValue/",
                type: "GET",
                success: function (data) {
                    if (data.PolizaActual > 0) {
                        $.ajax({
                            url: "/Polizas/GetPoliza/" + data.PolizaActual,
                            type: "GET",
                            success: function (data) {
                                $("#NumPoliza").val(data.lista[0].NumPoliza).change();
                                $("#NombreCompleto").val(data.lista[0].Nombres + ' ' + data.lista[0].Apellidos).change();
                                //$("#Nombres").val(data.lista[0].Nombres);
                                $("#Ident").val(data.lista[0].Identificacion);
                                $("#Producto").val(data.lista[0].Producto);
                                $("#Aseguradora").val(data.lista[0].Aseguradora);
                                $idPolizaSelected = data.lista[0].IdPoliza;
                            }
                        });
                    }
                }
            });
        });



        function Valor() {
            $.ajax({
                url: "/Adendas/SetValue/" + 0,
                type: "GET",
                success: function (data) {
                }
            });
        }
    </script>
}
