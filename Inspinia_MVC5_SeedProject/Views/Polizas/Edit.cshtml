@model Inspinia_MVC5_SeedProject.Models.Poliza

@{
    ViewBag.Title = "Edit";
}

<style>
        #initialihiddenbutton,
        #btnCancelarContratante,
        #btnCancelarIntermediario {
            display: none;
        }

        .ibox-hr {
            -moz-border-bottom-colors: none;
            -moz-border-left-colors: none;
            -moz-border-right-colors: none;
            -moz-border-top-colors: none;
            background-color: #ffffff;
            border-color: #e7eaec;
            border-image: none;
            border-style: solid solid none;
            border-width: 2px 0 0;
            color: inherit;
            margin-bottom: 0;
            padding: 0;
            min-height: 48px;
        }

        p {
            font-weight: 400 !important;
        }

        h2 {
            font-size: 26px !important;
            font-weight: 600 !important;
        }

        .container {
            width: 97% !important;
        }

        .btn-default {
            background: #818e99 !important;
            color: white !important;
            opacity: inherit !important;
        }

        .stepwizard .btn-primary {
            background-color: #428bca !important;
            color: white !important;
        }


        /*body{
        margin-top:40px;
    }*/

        .stepwizard-step p {
            margin-top: 10px;
        }

        .stepwizard-row {
            display: table-row;
        }

        .stepwizard {
            display: table;
            width: 100%;
            position: relative;
        }

        .stepwizard-step button[disabled] {
            opacity: 1 !important;
            filter: alpha(opacity=100) !important;
        }

        .stepwizard-row:before {
            top: 14px;
            bottom: 0;
            position: absolute;
            content: " ";
            width: 100%;
            height: 1px;
            background-color: #ccc;
            z-index: 0;
        }

        .stepwizard-step {
            display: table-cell;
            text-align: center;
            position: relative;
        }

        .btn-circle {
            width: 30px;
            height: 30px;
            text-align: center;
            padding: 6px 0;
            font-size: 12px;
            line-height: 1.428571429;
            border-radius: 15px;
        }
</style>

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-sm-4">
        <h2>Pólizas</h2>
        <ol class="breadcrumb">
            <li>
                @Html.ActionLink("Lista", "Index")
            </li>
            <li class="active">
                <strong>Editar</strong>
            </li>
        </ol>
    </div>
    <div class="col-sm-8">
        <div class="title-action">
            <a class="btn btn-success btn-outline dim" href="@Url.Action("Index","Polizas")"><i class="fa fa-arrow-left"></i>&nbsp;&nbsp;Regresar</a>
            <a class="btn btn-success btn-outline dim" href="@Url.Action("Create","BienesAsegurados")" onclick="Valor()"><i class="fa fa-file-text-o"></i>&nbsp;&nbsp;Bienes</a>
            @*<a class="btn btn-success btn-outline fa fa-file-image-o dim" href="@Url.Action("Create","Bitacoras")" onclick="Valor()">&nbsp;&nbsp;Archivos</a>*@
            <a class="btn btn-success btn-outline dim" href="@Url.Action("Create","Adendas")" onclick="Valor()"><i class="fa fa-folder"></i>&nbsp;&nbsp;Adendas</a>
            <a class="btn btn-success btn-outline dim" href="@Url.Action("Create","Reclamos")" onclick="Valor()"><i class="fa fa-exclamation-circle"></i>&nbsp;&nbsp;Reclamos</a>
            <a class="btn btn-success btn-outline dim" href="@Url.Action("Create","Tramites")" onclick="Valor()"><i class="fa fa-folder-open"></i>&nbsp;&nbsp;Trámites</a>
            <a class="btn btn-success btn-outline dim" href="@Url.Action("Create","ReciboCuotas")" onclick="Valor()"><i class="fa fa-money"></i>&nbsp;&nbsp;Pagos</a>
        </div>
    </div>
</div>




<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h5>Editar Póliza</h5>
                </div>
                <div class="ibox-content">
                    <!--Steps-->
                    <div class="container">
                        <div class="stepwizard">
                            <div class="stepwizard-row setup-panel">
                                <div class="stepwizard-step col-xs-3">
                                    <a href="#step-1" type="button" class="btn btn-primary btn-circle">1</a>
                                    <p>Póliza</p>
                                </div>
                                <div class="stepwizard-step col-xs-3">
                                    <a href="#step-2" type="button" class="btn btn-default btn-circle" @*disabled="disabled"*@>2</a>
                                    <p>Detalle de Cuotas</p>
                                </div>
                                <div class="stepwizard-step col-xs-3">
                                    <a href="#step-3" type="button" class="btn btn-default btn-circle" @*disabled="disabled"*@>3</a>
                                    <p>Bienes Asegurados</p>
                                </div>
                                <div class="stepwizard-step col-xs-3">
                                    <a href="#step-4" type="button" class="btn btn-default btn-circle" @*disabled="disabled"*@>4</a>
                                    <p>Archivos</p>
                                </div>
                            </div>
                        </div>
                    </div>
                    <br />

                    @using (Html.BeginForm("Edit", "Polizas", FormMethod.Post/*, new { @onsubmit = "return EditarDatos(this)" }*/))
                    {
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(model => model.Id)
                        @Html.ValidationSummary(false, "", new { @class = "text-danger" })

                        <!--Paso #1-->
                        <div class="row setup-content" id="step-1">
                            <div class="col-md-offset-0">
                                <div class="col-md-12">
                                    <div class="panel panel-primary">
                                        <div class="panel-heading">
                                            <i class="fa fa-pencil-square-o fa-lg"></i>
                                        </div>
                                        <!--Bloque #1-->
                                        <div class="container" style="margin-top:20px;">
                                            <h2>Cliente, Contratante e Intermediario</h2>
                                            <hr class="ibox-hr" />
                                        </div>

                                        <div class="panel-body">

                                            <div class="form-group">
                                                @Html.LabelFor(model => model.Cliente, "Cliente", htmlAttributes: new { @class = "control-label col-md-3" })
                                                <div class="col-md-9">
                                                    @Html.DropDownList("ClienteId", (SelectList)ViewBag.ClienteId, htmlAttributes: new { @class = "form-control", @id = "dropClienteE" })
                                                </div>
                                            </div>
                                            <br /><br />
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.Cliente, "Contacto Intermediario", htmlAttributes: new { @class = "control-label col-md-3" })
                                                <div class="col-md-9">
                                                    @Html.DropDownList("ContactoIntermediarioId", (SelectList)ViewBag.ContactoIntermediarioId, htmlAttributes: new { @class = "form-control", @id = "dropIntermediarioE" })
                                                </div>
                                            </div>
                                            <br /><br />
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.Cliente, "Contratante", htmlAttributes: new { @class = "control-label col-md-3" })
                                                <div class="col-md-9">
                                                    @Html.DropDownList("PersonaId", (SelectList)ViewBag.PersonaId, htmlAttributes: new { @class = "form-control", @id = "dropContratanteE" })
                                                </div>
                                            </div>
                                            <br /><br />

                                        </div>

                                        <!--Bloque #2-->
                                        <!--Título del contenedor-->
                                        <div class="container ibox-title">
                                            <h2>Datos de Póliza</h2>
                                        </div> <!--Fin del titulo-->
                                        <br />

                                        <!--Caja interna para división-->
                                        <div class="row">
                                            <div class="col-lg-6 b-r">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.NumPoliza, htmlAttributes: new { @class = "control-label col-md-4" })
                                                    <div class="col-md-8">
                                                        @Html.EditorFor(model => model.NumPoliza, new { htmlAttributes = new { @class = "form-control", @id = "txtNumPolizaE" } })
                                                        @Html.ValidationMessageFor(model => model.NumPoliza, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                                <br /><br />
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.Producto.AseguradoraId, "Aseguradora", htmlAttributes: new { @class = "control-label col-md-4" })
                                                    <div class="col-md-8">
                                                        @Html.DropDownList("IdAseguradora", (SelectList)ViewBag.AseguradoraId, htmlAttributes: new { @class = "form-control", @id = "dropAseguradoraE", @onchange = "loadProductos()" })
                                                        @Html.ValidationMessageFor(model => model.Producto.AseguradoraId, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                                <br /><br />
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.ProductoId, "Producto", htmlAttributes: new { @class = "control-label col-md-4" })
                                                    <div class="col-md-8">
                                                        @Html.DropDownList("ProductoId", (SelectList)ViewBag.ProductoId, htmlAttributes: new { @class = "form-control", @id = "dropProductoE", @onchange = "ObtenerComision()" })
                                                        @*<select id="dropProducto" name="ProductoId" class="form-control"></select>*@
                                                        @Html.ValidationMessageFor(model => model.ProductoId, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                                <br /><br />
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.TipoMoneda, htmlAttributes: new { @class = "control-label col-md-4" })
                                                    <div class="col-md-8">
                                                        @Html.DropDownList("TipoMoneda", (SelectList)ViewBag.TipoMoneda, htmlAttributes: new { @class = "form-control", @id = "dropTipoMonedaE" })
                                                        @Html.ValidationMessageFor(model => model.NumPoliza, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                                <br /><br />
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.FechaEmision, htmlAttributes: new { @class = "control-label col-md-4" })
                                                    <div class="col-md-8">
                                                        @Html.EditorFor(model => model.FechaEmision, new { htmlAttributes = new { @class = "form-control", @id = "txtFechaEmisionE", @onchange="ObtenerCambio()" } })
                                                        @Html.ValidationMessageFor(model => model.FechaEmision, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                                <br /><br />
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.FechaDesde, htmlAttributes: new { @class = "control-label col-md-4" })
                                                    <div class="col-md-8">
                                                        @Html.EditorFor(model => model.FechaDesde, new { htmlAttributes = new { @class = "form-control", @id = "txtFechaDesdeE" } })
                                                        @Html.ValidationMessageFor(model => model.FechaDesde, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                                <br /><br />
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.FechaHasta, htmlAttributes: new { @class = "control-label col-md-4" })
                                                    <div class="col-md-8">
                                                        @Html.EditorFor(model => model.FechaHasta, new { htmlAttributes = new { @class = "form-control", @id = "txtFechaHastaE" } })
                                                        @Html.ValidationMessageFor(model => model.FechaHasta, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                                <br /><br />

                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.Tipo, "Tipo de Póliza", htmlAttributes: new { @class = "control-label col-md-4" })
                                                    <div class="col-md-8">
                                                        @Html.DropDownList("Tipo", (SelectList)ViewBag.TipoPoliza, htmlAttributes: new { @class = "form-control", @id = "dropTipoPolizaE" })
                                                        @Html.ValidationMessageFor(model => model.Tipo, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                                <br /><br />
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.FormaDePago, htmlAttributes: new { @class = "control-label col-md-4" })
                                                    <div class="col-md-8">
                                                        @Html.DropDownList("FormaDePago", (SelectList)ViewBag.FormadePago, htmlAttributes: new { @class = "form-control", @id = "dropFormaPagoE" })
                                                        @Html.ValidationMessageFor(model => model.FormaDePago, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                                <br /><br />

                                            </div><!--termina contenedor de la primera división-->
                                            <!--Segundo contenedor-->
                                            <div class="col-lg-6">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.PrimaNeta, htmlAttributes: new { @class = "control-label col-md-4" })
                                                    <div class="col-md-8">
                                                        @Html.EditorFor(model => model.PrimaNeta, new { htmlAttributes = new { @class = "form-control", @id = "txtPrimaNetaE", @onkeyup = "IVA_Emision()" } })
                                                        @Html.ValidationMessageFor(model => model.PrimaNeta, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                                <br /><br />
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.Emision, "Derecho de Emisión", htmlAttributes: new { @class = "control-label col-md-4" })
                                                    <div class="col-md-8">
                                                        @Html.EditorFor(model => model.Emision, new { htmlAttributes = new { @class = "form-control", @id = "txtEmisionE" } })
                                                        @Html.ValidationMessageFor(model => model.Emision, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                                <br /><br />
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.Iva, "IVA", htmlAttributes: new { @class = "control-label col-md-4" })
                                                    <div class="col-md-8">
                                                        @Html.EditorFor(model => model.Iva, new { htmlAttributes = new { @class = "form-control", @id = "txtIvaE" } })
                                                        @Html.ValidationMessageFor(model => model.Iva, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                                <br /><br />
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.Otros, htmlAttributes: new { @class = "control-label col-md-4" })
                                                    <div class="col-md-8">
                                                        @Html.EditorFor(model => model.Otros, new { htmlAttributes = new { @class = "form-control", @id = "txtOtrosE" } })
                                                        @Html.ValidationMessageFor(model => model.Otros, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                                <br /><br />
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.ComisionPorcentaje,"Porcentaje de Comisión", htmlAttributes: new { @class = "control-label col-md-4" })
                                                    <div class="col-md-8">
                                                        @Html.EditorFor(model => model.ComisionPorcentaje, new { htmlAttributes = new { @class = "form-control", @id = "txtComisionPorcE" } })
                                                        @Html.ValidationMessageFor(model => model.ComisionPorcentaje, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                                <br /><br />
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.ComisionValor,"Comisión", htmlAttributes: new { @class = "control-label col-md-4" })
                                                    <div class="col-md-8">
                                                        @Html.EditorFor(model => model.ComisionValor, new { htmlAttributes = new { @class = "form-control", @id = "txtComisionE", @readonly = "true" } })
                                                        @Html.ValidationMessageFor(model => model.ComisionValor, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                                <br /><br />
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.TipoDeCambio, htmlAttributes: new { @class = "control-label col-md-4" })
                                                    <div class="col-md-8">
                                                        @Html.EditorFor(model => model.TipoDeCambio, new { htmlAttributes = new { @class = "form-control", @id = "txtTipoCambioE", @readonly = "true" } })
                                                        @Html.ValidationMessageFor(model => model.TipoDeCambio, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>

                                                <br /><br />
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.AgenteId, "Agente", htmlAttributes: new { @class = "control-label col-md-4" })
                                                    <div class="col-md-8">
                                                        @Html.DropDownList("AgenteId", (SelectList)ViewBag.AgenteId, htmlAttributes: new { @class = "form-control", @id = "dropAgenteE" })
                                                        @Html.ValidationMessageFor(model => model.AgenteId, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                                <br /><br />
                                            </div><!--termina el segundo contenedor-->
                                        </div> <!--termina caja para división-->

                                        <button class="btn btn-primary nextBtn pull-right" type="button" style="margin-top:1.7em;">
                                            Siguiente
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!--Paso #2-->
                        <div class="row setup-content" id="step-2">
                            <div class="col-xs-12 col-md-offset-0">
                                <div class="col-md-12">
                                    <div class="panel panel-primary">
                                        <div class="panel-heading">
                                            <i class="fa fa-pencil-square-o fa-lg"></i>
                                        </div>
                                        <!--Contenido de la caja-->
                                        <div class="panel-body">
                                            <!--Título del contenedor-->
                                            <div class="container" style="margin-top:20px;">
                                                
                                                <h2>Detalle de Cuotas</h2>
                                                <h3 id="lblRecibo"></h3>
                                                <a class="btn btn-success fa fa-list dim pull-right" data-toggle="modal" data-target="#modal-cuotas" style="float: right;margin-top: -2.5em;margin-left: 1em;" id="btnAgregarCuotasE"> &nbsp; &nbsp; Generar cuotas</a>
                                                <hr class="ibox-hr" />
                                            </div> <!--Fin del titulo-->
                                            <!--TABLA DE DETALLE DE CUOTAS-->
                                            <div class="panel-footer">
                                                <div class="table-responsive">
                                                    <table class="table" id="tableCuotasEditar">
                                                        <thead>
                                                            <tr>
                                                                <th>Cuota</th>
                                                                <th>Vence</th>
                                                                <th>Monto</th>
                                                                <th>Estado</th>
                                                                <th>Acciones</th>
                                                            </tr>
                                                        </thead>
                                                    </table>
                                                </div>
                                            </div>
                                            <!--FIN DE TABLA DE DETALLE DE CUOTAS-->
                                            <button class="btn btn-primary backBtn pull-left" type="button" style="float:left; margin-top:1.7em;">Regresar</button>
                                            <button class="btn btn-primary nextBtn pull-right" type="button" style="margin-top:1.7em;"> Siguiente</button>

                                        </div> <!--termina contenido de la caja-->
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!--Paso #3-->
                        <div class="row setup-content" id="step-3">
                            <div class="col-xs-12 col-md-offset-0">
                                <div class="col-md-12">
                                    <div class="panel panel-primary">
                                        <div class="panel-heading">
                                            <i class="fa fa-pencil-square-o fa-lg"></i>
                                        </div>
                                        <!--Contenido de la caja-->
                                        <div class="panel-body">
                                            <!--Título del contenedor-->
                                            <div class="container" style="margin-top:20px;">
                                                <h2>Bienes Asegurados</h2>
                                                <hr class="ibox-hr" />
                                            </div> <!--Fin del titulo-->
                                        <br /><br />
                                            <div class="form-group">
                                                <div class="col-md-4">
                                                    @Html.LabelFor(model => model.ClienteId, "Número de Certificado", htmlAttributes: new { @class = "control-label col-md-4" })
                                                    @*<label class="control-label col-md-4">Bien Asegurado</label>*@
                                                    <div class="col-md-8">
                                                        @Html.DropDownList("BienAseguradoId", (SelectList)ViewBag.BienAseguradoId, htmlAttributes: new { @class = "form-control", @id = "dropCertificadoE" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <div class="col-md-6">
                                                    @Html.LabelFor(model => model.ClienteId, "Observación", htmlAttributes: new { @class = "control-label col-md-3" })
                                                    @*<label class="control-label col-md-4">Bien Asegurado</label>*@
                                                    <div class="col-md-8">
                                                        <input class="form-control" id="txtObservacionE" name="Observacion" style="margin-top: -1em;" />
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-2" style="margin-top: -0.5em;">
                                                <input type="checkbox" name="Exclusion" id="checkEx" />
                                                <label style="margin-left: 0.5em;"> ¿Excluido? </label>
                                            </div>
                                            <br /><br /><br />
                                            <!--Título del contenedor-->
                                            <div class="container ibox-title">
                                                <h2>Características</h2>
                                                <a class="btn btn-success fa fa-plus dim pull-right" data-toggle="modal" data-target="#myModal5" style="float: right;margin-top: -2.5em;margin-left: 1em;" id="btnAddCaract"> &nbsp; &nbsp; Agregar </a>
                                            </div> <!--Fin del titulo-->
                                            <br />
                                            <!--TABLA DE DETALLE DE CARACTERISTICAS-->
                                            <div class="panel-footer">
                                                <div class="table-responsive">
                                                    <table class="table" id="tableCaractEditar">
                                                        <thead>
                                                            <tr>
                                                                <th>Característica</th>
                                                                <th>Valor</th>
                                                                <th>Acciones</th>
                                                            </tr>
                                                        </thead>
                                                    </table>
                                                </div>
                                            </div>
                                            <!--FIN DE TABLA DE DETALLE DE CARACTERISTICAS-->
                                            <br />
                                            <!--Título del contenedor-->
                                            <div class="container ibox-title">
                                                <h2>Coberturas</h2>
                                                <a class="btn btn-success fa fa-plus dim pull-right" data-toggle="modal" data-target="#myModalCob" style="float: right;margin-top: -2.5em;margin-left: 1em;" id="btnAddCobert"> &nbsp; &nbsp; Agregar </a>
                                            </div> <!--Fin del titulo-->
                                            <br />
                                            <!--TABLA DE DETALLE DE COBERTURAS-->
                                            <div class="panel-footer">
                                                <div class="table-responsive">
                                                    <table class="table" id="tableCobertEditar">
                                                        <thead>
                                                            <tr>
                                                                <th>Cobertura</th>
                                                                <th>Suma Asegurada</th>
                                                                <th>Deducible</th>
                                                                <th>Prima</th>
                                                                <th>Acciones</th>
                                                            </tr>
                                                        </thead>
                                                    </table>
                                                </div>
                                            </div>
                                            <!--FIN DE TABLA DE DETALLE DE COBERTURAS-->

                                            <button class="btn btn-primary backBtn pull-left" type="button" style="float:left; margin-top:1.7em;">Regresar</button>
                                            <button class="btn btn-primary nextBtn pull-right" type="button" style="margin-top:1.7em;"> Siguiente</button>

                                        </div> <!--termina contenido de la caja-->
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!--Paso #4-->
                        <div class="row setup-content" id="step-4">
                            <div class="col-xs-12 col-md-offset-0">
                                <div class="col-md-12">
                                    <div class="panel panel-primary">
                                        <div class="panel-heading">
                                            <i class="fa fa-pencil-square-o fa-lg"></i>
                                        </div>
                                        <!--Contenido de la caja-->
                                        <div class="panel-body">
                                            <!--Título del contenedor-->
                                            <div class="container" style="margin-top:20px;">
                                                <h2>Archivos</h2>
                                                <a class="btn btn-success fa fa-plus dim pull-right" data-toggle="modal" data-target="#myModalArchi" style="float: right;margin-top: -2.5em;margin-left: 1em;" id="btnAddArchivo"> &nbsp; &nbsp; Agregar </a>
                                                <hr class="ibox-hr" />
                                            </div> <!--Fin del titulo-->
                                            <!--TABLA DE DETALLE DE ARCHIVOS-->
                                            <div class="panel-footer">
                                                <div class="table-responsive">
                                                    <table class="table" id="tableArchivosP">
                                                        <thead>
                                                            <tr>
                                                                <th>Imagen</th>
                                                                <th>Acciones</th>
                                                            </tr>
                                                        </thead>
                                                    </table>
                                                </div>
                                            </div>
                                            <!--FIN DE TABLA DE DETALLE DE ARCHIVOS-->
                                            <br />

                                            <button class="btn btn-primary backBtn pull-left" type="button" style="float:left; margin-top:1.7em;">Regresar</button>
                                            <button class="btn btn-primary pull-right" type="submit" style="margin-top:1.7em;"> Guardar </button>

                                        </div> <!--termina contenido de la caja-->
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
 </div>

<!--Modal para editar una caracteristica-->
<div class="modal inmodal fade" id="myModal5" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-md">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                <h4 class="modal-title">Característica</h4>

            </div>
            <div class="modal-body">

                @Html.Partial("_EditarCaracterísticas")

            </div>
            <div class="modal-footer">
                <button type="button" onclick="" class="btn btn-success pull-right" id="btnGuardarCambios" style="display:none;">Guardar</button>
                <button type="button" onclick="" class="btn btn-success pull-right" id="btnAñadirCaracteristicas" style="display:none;">Guardar</button>
            </div>
        </div>
    </div>
</div>

<!--Modal para editar una cobertura-->
<div class="modal inmodal fade" id="myModalCob" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-md">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                <h4 class="modal-title">Cobertura</h4>

            </div>
            <div class="modal-body">

                @Html.Partial("_EditarCoberturas")

            </div>
            <div class="modal-footer">
                <button type="button" onclick="" class="btn btn-success pull-right" id="btnGuardarCambiosCobertura" style="display:none;">Guardar</button>
                <button type="button" onclick="" class="btn btn-success pull-right" id="btnAñadirCoberturas" style="display:none;">Guardar</button>
            </div>
        </div>
    </div>
</div>

<!--Modal para editar una cuota-->
<div class="modal inmodal fade" id="myModalCuotas" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-md">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                <h4 class="modal-title">Cuota</h4>

            </div>
            <div class="modal-body">

                @Html.Partial("_EditarCuotasPoliza")

            </div>
            <div class="modal-footer">
                <button type="button" onclick="" class="btn btn-success pull-right" id="btnActualizarCuota" style="display:none;">Guardar</button>
            </div>
        </div>
    </div>
</div>

<!--Modal para volver a generar cuotas-->
<div class="modal inmodal fade" id="modal-cuotas" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-md">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title">Generar Cuotas</h4>
            </div>
            <div class="modal-body">
                @Html.Partial("_GenerarCuotas")
            </div>
            <div class="modal-footer">
                <button type="button" onclick="GenerarCuotasEditar()" class="btn btn-success pull-right" id="btnGenerarE">Generar</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>

<!--Modal para agregar archivo-->
<div class="modal inmodal fade" id="myModalArchi" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-md">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                <h4 class="modal-title">Agregar Archivo</h4>

            </div>
            <div class="modal-body">

                @Html.Partial("_AgregarArchivo")


            </div>
            <div class="modal-footer">
                <button type="button" onclick="" class="btn btn-success pull-right" id="btnActualizarArchivo">Guardar</button>
            </div>
        </div>
    </div>
</div>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <!-- Datatable -->
    <link href="~/Content/DataTables/media/css/dataTables.bootstrap.min.css" rel="stylesheet" />
    <link href="~/Content/DataTables/media/css/jquery.dataTables.min.css" rel="stylesheet" />
    <link href="~/Content/DataTables/media/css/dataTables.jqueryui.min.css" rel="stylesheet" />
    <script src="~/Scripts/DataTables/media/js/dataTables.bootstrap.min.js"></script>
    <script src="~/Scripts/DataTables/media/js/dataTables.jqueryui.min.js"></script>
    <script src="~/Scripts/DataTables/media/js/jquery.dataTables.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"> </script>

<script>
            $(document).ready(function () {
                var navListItems = $('div.setup-panel div a'),
                        allWells = $('.setup-content'),
                        allNextBtn = $('.nextBtn'),
                        allBackButton = $('.backBtn');

                allWells.hide();

                navListItems.click(function (e) {
                    e.preventDefault();
                    var $target = $($(this).attr('href')),
                            $item = $(this);

                    if (!$item.hasClass('disabled')) {
                        navListItems.removeClass('btn-primary').addClass('btn-default');
                        $item.addClass('btn-primary');
                        allWells.hide();
                        $target.show();
                        $target.find('input:eq(0)').focus();
                    }
                });
                allBackButton.click(function () {
                    var curStep = $(this).closest(".setup-content"),
                        curStepBtn = curStep.attr("id"),
                        nextStepWizard = $('div.setup-panel div a[href="#' + curStepBtn + '"]').parent().prev().children("a"),
                        curInputs = curStep.find("input[type='text'],input[type='url']"),
                        isValid = true;

                    $(".form-group").removeClass("has-error");
                    for (var i = 0; i < curInputs.length; i++) {
                        if (!curInputs[i].validity.valid) {
                            isValid = false;
                            $(curInputs[i]).closest(".form-group").addClass("has-error");
                        }
                    }

                    nextStepWizard.removeAttr('disabled').trigger('click');
                });

                allNextBtn.click(function () {
                    var curStep = $(this).closest(".setup-content"),
                        curStepBtn = curStep.attr("id"),
                        nextStepWizard = $('div.setup-panel div a[href="#' + curStepBtn + '"]').parent().next().children("a"),
                        curInputs = curStep.find("input[type='text'],input[type='url']"),
                        isValid = true;

                    $(".form-group").removeClass("has-error");
                    for (var i = 0; i < curInputs.length; i++) {
                        if (!curInputs[i].validity.valid) {
                            isValid = false;
                            $(curInputs[i]).closest(".form-group").addClass("has-error");
                        }
                    }

                    if (isValid)
                        nextStepWizard.removeAttr('disabled').trigger('click');
                });


                $('div.setup-panel div a.btn-primary').trigger('click');
            });
</script>

<script>
    $(document).ready(function () {
        console.log(@Model.ProductoId);
        $("#dropClienteE,#dropIntermediarioE,#dropContratanteE,#dropAseguradoraE,#dropTipoMonedaE,#dropTipoPolizaE,#dropFormaPagoE,#dropAgenteE").select2({ width: "100%" });
        $("#dropAseguradoraE").select2("val", @Model.Producto.AseguradoraId);
        
    });

    function loadProductos() {
        var i = $("#dropAseguradoraE").val();
        var url = "/Polizas/Filtro/" + i;
        $.ajax({
            type: "GET",
            url: url,
            dataType: "JSON",
            success: function (list) {
                $("#dropProductoE").empty();
                for (var a = 0; a < list.listProd.length; a++) {
                    $("#dropProductoE").append("<option value=" + list.listProd[a].IdProducto + ">" + list.listProd[a].Descripcion + "</option>;")
                }
                $("#dropProductoE").select2({ width: "100%" });
                if(i==@Model.Producto.AseguradoraId)
                    $("#dropProductoE").select2("val", @Model.ProductoId);
                else
                    $("#dropProductoE").select2("val", $("#dropProductoE option:first").val());
                $("#dropProductoE").change();
            }
        })
    }


    function IVA_Emision()
    {
        if ($("#txtPrimaNetaE").val().trim()) {
            var prima = parseFloat($("#txtPrimaNetaE").val());
            var iva = prima * 0.15;
            iva = parseFloat(iva).toFixed(2);
            $("#txtIvaE").val(iva);

            //Calcular emisión
            var emision = prima * 0.02;
            emision = parseFloat(emision).toFixed(2);
            $("#txtEmisionE").val(emision);
        }
    }

    function ObtenerComision()
    {
        var P_Id = $("#dropProductoE").val();
        var url = "/Polizas/GetComision/" + P_Id;
        $.ajax({
            type: "GET",
            url: url,
            dataType: "JSON",
            success: function (list) {
                $("#txtComisionPorcE").val(list.s);
                if ($("#txtPrimaNetaE").val().trim() &&
                    $("#txtEmisionE").val().trim() &&
                    $("#txtIvaE").val().trim() &&
                    $("#txtOtrosE").val().trim() &&
                    $("#txtComisionPorcE").val().trim()) {
                    var prima = parseFloat($("#txtPrimaNetaE").val());
                    var porc = $("#txtComisionPorcE").val();
                    var valor = prima * (porc / 100);
                    $("#txtComisionE").val(valor);
                }
            }
        })
    }

    $("#txtPrimaNetaE,#txtIvaE,#txtEmisionE,#txtOtrosE,#txtComisionPorcE").keyup( function() {
        if ($("#txtPrimaNetaE").val().trim() &&
            $("#txtEmisionE").val().trim() &&
            $("#txtIvaE").val().trim() &&
            $("#txtOtrosE").val().trim() &&
            $("#txtComisionPorcE").val().trim()) {
            var prima = parseFloat($("#txtPrimaNetaE").val());
            var porc = $("#txtComisionPorcE").val();
            var valor = prima * (porc / 100);
            valor = parseFloat(valor).toFixed(2);
            $("#txtComisionE").val(valor);
        }
    })

    function ObtenerCambio() {
        var url = "/Polizas/GetTipoDeCambio/";
        $.ajax({
            type: "GET",
            url: url,
            data: {fecha : $("#txtFechaEmisionE").val()},
            dataType: "JSON",
            success: function (list) {
                $("#txtTipoCambioE").val(list.s);
            }
        })
    }
</script>

<script>

    $(document).ready(function () {
            $("#dropClienteE").select2("val",@Model.ClienteId);
            $("#dropIntermediarioE").select2("val", @Model.ContactoIntermediarioId);
            $("#dropContratanteE").select2("val", @Model.PersonaId);
            $("#dropAgenteE").select2("val", @Model.AgenteId);

            //Vuelvo a traer el mismo objeto desde la BDD.
            //No me convence hacerlo asi, idear otro modo xD
            var url = "/Polizas/Objeto/";
            $.ajax({
                type: "GET",
                url: url,
                dataType: "JSON",
                data: {
                    id:@Model.Id,
                },
                success: function (list) {
                    for (var a = 0; a < list.objeto.length; a++) {
                        $("#dropTipoPolizaE").select2("val", list.objeto[0].TipoPoliza);
                        $("#dropTipoMonedaE").select2("val",list.objeto[0].TipoMoneda);
                        $("#dropFormaPagoE").select2("val",list.objeto[0].FormaDePago);
                    }
                }
            });
    });

    // Referencia la tabla de detalles
    var dataTableDetalle = null;
    $("#dropAseguradoraE").change();
    $("#dropCertificadoE").change();
    $("#TipoCuotas").change();
    // Crea una instancia de datatable para el detalle
    $(function () {
        // Instancia del datatable para mostrar los detalles de cuotas.
        dataTableDetalle = $("#tableCuotasEditar").DataTable({
            "info": false,
            "paging": false,
            "ordering": false,
            "searching": false,
            "language": {
                "emptyTable": "Agregue cuotas",
                "search": "Busqueda"
            }, "columnDefs": [{
                "targets": 4,
                "render": function (data, type, row, meta) {
                    return "<button class='btn btn-sm btn-danger' data-toggle='modal' data-target='#myModalCuotas' value='" + data + "' type='button'>Editar</button>";
                }
            }]
        });
    });

    function CargarImagenes() {
        //Ahora traemos todas las imagenes que pertenecen a esa poliza
        $.ajax({
            type: "GET",
            url: archivos,
            dataType: "JSON",
            success: function (list) {
                dataTableArchivos.clear();
                for (var a = 0; a < list.list.length; a++) {
                    dataTableArchivos.row.add([
                        list.list[a].Foto,
                        list.list[a].Id]).draw(false)
                }
            }
        });
    };

    //Evento para cargar el detalle de cuotas
    $(document).ready(function () {
        $("#dropCertificadoE").change();
        var PolizaId = @Model.Id;
        var url = "/Polizas/RecuperarCuotas/" + PolizaId;
        $.ajax({
            type: "GET",
            url: url,
            dataType: "JSON",
            success: function (list) {
                for (x = 0; x < list.list.length; x++) {
                    dataTableDetalle.row.add([
                           list.list[x].Cuotas,
                           list.list[x].Vence,
                           list.list[x].Monto,
                           list.list[x].Estado,
                           list.list[x].IdDetalle]).draw(false);
                }
                $("#lblRecibo").text("Recibo de Prima: " + list.list[0].Recibo);
            }
        });
    });

    var dataTableDetalleCaract = null;
    // Crea una instancia de datatable para el detalle de características
    $(function () {
        // Instancia del datatable para mostrar los detalles.
        dataTableDetalleCaract = $("#tableCaractEditar").DataTable({
            "info": false,
            "paging": false,
            "ordering": false,
            "searching": false,
            "language": {
                "emptyTable": "Agregue características",
                "search": "Busqueda"
            }, "columnDefs": [{
                "targets": 2,
                "render": function (data, type, row, meta) {
                    return "<button class='btn btn-sm btn-danger' data-toggle='modal' data-target='#myModal5' value='" + data + "' type='button'>Editar</button>";
                }
            }]
        });
    });

    var dataTableDetalleCobert = null;
    // Crea una instancia de datatable para el detalle de coberturas
    $(function () {
        // Instancia del datatable para mostrar los detalles.
        dataTableDetalleCobert = $("#tableCobertEditar").DataTable({
            "info": false,
            "paging": false,
            "ordering": false,
            "searching": false,
            "language": {
                "emptyTable": "Agregue coberturas",
                "search": "Busqueda"
            }, "columnDefs": [{
                "targets": 4,
                "render": function (data, type, row, meta) {
                    return "<button class='btn btn-sm btn-danger' data-toggle='modal' data-target='#myModalCob' value='" + data + "' type='button'>Editar</button>";
                }
            }]
        });
    });

    var dataTableArchivos = null;
    $(function () {
        // Instancia del datatable para mostrar los detalles.
        dataTableArchivos = $("#tableArchivosP").DataTable({
            "info": false,
            "paging": false,
            "ordering": false,
            "searching": false,
            "language": {
                "emptyTable": "No hay imágenes que mostrar.",
            }, "columnDefs":[{
                "targets": 0,
                "render": function (data, type, row, meta) {
                    return  "<img src='" + data +"' style='width:40%'/>";
                },
            },
            {
                "targets": 1,
                "render": function (data, type, row, meta) {
                    return  "<button class='btn btn-sm btn-danger' value='" + data + "' type='button'>Eliminar</button>";
                },
            }]
        });
        CargarImagenes();
    });

    var id;

    //Querys para recuperar todos los datos de los bienes asegurados
    //Usamos el evento desencadenado al cambiar de numero de certificado
    $("#dropCertificadoE").change(function(){
        id= $(this).val();
        var datosbien = "/Polizas/RecuperarBien/" + id;
        var caracteristicas = "/Polizas/RecuperarCaracteristicas/" + id;
        var coberturas = "/Polizas/RecuperarCoberturas/" + id;
        var archivos = "/Polizas/RecuperarArchivos/" + id;

        //primer ajax
        $.ajax({
            type: "GET",
            url: datosbien,
            dataType: "JSON",
            success: function (list) {
                $("#txtObservacionE").val(list.lista[0].Observacion);
                $("#checkEx").prop("checked", list.lista[0].Excluido);
            }
        })
        //fin del primer ajax que trae los datos del bien

        //segundo ajax
        $.ajax({
            type: "GET",
            url: caracteristicas,
            dataType: "JSON",
            success: function (list) {
                dataTableDetalleCaract.clear();
                for (var a = 0; a < list.list.length; a++) {
                    dataTableDetalleCaract.row.add([
                    list.list[a].Descripcion,
                    list.list[a].Valor,
                    list.list[a].IdDetalle]).draw(false);
                }
            }
        })
        //fin del segundo ajax que trae las caracteristicas

        //tercer ajax
        $.ajax({
            type: "GET",
            url: coberturas,
            dataType: "JSON",
            success: function (list) {
                dataTableDetalleCobert.clear();
                for (var a = 0; a < list.list.length; a++) {
                    dataTableDetalleCobert.row.add([
                   list.list[a].Descripcion,
                   list.list[a].Suma,
                   list.list[a].Deducible,
                   list.list[a].Prima,
                   list.list[a].IdDetalle]).draw(false);
                }
            }
        })
        //fin del tercer ajax que trae las coberturas
        //Una vez recuperados los datos, los asignamos a los controles
        //Comenzamos con los datos del bien
        //Luego asignamos las caracteristicas al DataTable correspondiente
        //Y por último agregamos los datos de cobertura a su DataTable

    })

    //*******************************************************************************************************************************\\
    //========================================EVENTOS PARA MODIFICAR LOS DETALLES====================================================\\
    //*******************************************************************************************************************************\\

    var datos = null; //Lo uso para obtener la fila sobre la que se hace clic
    var caract = 0; // VariableGlobal
    $(function () {
        var botonRandom = null;
        //Evento que se desencadena al hacer clic en el botón de editar en la tabla Caracteristicas
        $("#tableCaractEditar tbody").on('click', 'button', function () {
            $("#btnGuardarCambios").show();
            $("#btnAñadirCaracteristicas").hide();
            datos = dataTableDetalleCaract.row($(this).parents('tr')).data();
            console.log(datos);
            botonRandom = $(this);
            var url = "/Caracteristicas/ListarCaracteristicas/";
            var buscar = "/Caracteristicas/DetalleCaracteristicas/" + botonRandom[0].value;
            //Recuperar la tupla que quiero editar
            $.ajax({
                type: "GET",
                url: buscar,
                dataType: "JSON",
                success: function (list) {
                    $("#tValor").val(list.listado[0].Valor);
                    //$("#tIdC").val(list.listado[0].IdCaract);
                    caract = list.listado[0].IdCaract;
                    console.log("Caracteristica seleccionad\n" + caract);

                    //Listar todas las caracteristicas para mostrarlas en el dropdownlist
                    $.ajax({
                        type: "GET",
                        url: url,
                        dataType: "JSON",
                        success: function (list) {
                            //Vaciar el dropdownlist para que los datos no se repitan
                            $("#dropCaract").empty();
                            console.log(list.list);
                            for (var a = 0; a < list.list.length; a++) {
                                $("#dropCaract").append("<option value=" + list.list[a].IdCaract + ">" + list.list[a].Descripcion + "</option>;")
                            }
                            //Asignar el valor por defecto al dropdownlist
                            $("#dropCaract").val(caract);
                        }
                    })
                }
            });
        });
    });

    //*************************
    //Evento al dar clic en el botón de guardar cambios ubicado en la modal
    $("#btnGuardarCambios").click(function () {
        if($("#tValor").val().trim())
        {
            var caracteristicas = "/Polizas/RecuperarCaracteristicas/" + id;
            var url = "/Caracteristicas/GuardarCambios/";
            $.ajax({
                type: "POST",
                url: url,
                dataType: "JSON",
                //asignamos los parámetros que va a recibir el controlador
                data: {
                    idDetalle : datos[2],
                    idCaracteristica: $("#dropCaract").val(),
                    valor: $("#tValor").val()
                },
                success: function () {
                    //Cuando se haya almacenado la modificación recuperamos nuevamente los datos
                    $.ajax({
                        type: "GET",
                        url: caracteristicas,
                        dataType: "JSON",
                        success: function (list) {
                            $("#myModal5 .close").click(); //cerramos la modal
                            dataTableDetalleCaract.clear(); //vaciamos la tabla
                            for (var a = 0; a < list.list.length; a++) {//volvemos a asignar los valores a la tabla
                                dataTableDetalleCaract.row.add([
                                    list.list[a].Descripcion,
                                    list.list[a].Valor,
                                    list.list[a].IdDetalle]).draw(false);
                            }
                        }
                    })
                }
            })
        }
        else
            swal("Hay campos necesarios en el formulario que aún están vacíos.\nPor favor verifique.", "Seguros & Más", "warning");
    });
    //***********************************************************************************************
    //================================================COBERTURAS=====================================
    var datosCob = null;
    var cobert;

    $(function () {
        var botonRandom2 = null;
        $("#tableCobertEditar tbody").on('click', 'button', function () {
            datosCob = dataTableDetalleCobert.row($(this).parents('tr')).data();
            $("#btnGuardarCambiosCobertura").show();
            $("#btnAñadirCoberturas").hide();
            botonRandom2 = $(this);
            var url = "/Coberturas/ListarCoberturas/";
            var buscar = "/Coberturas/DetalleCoberturas/" + botonRandom2[0].value;

            //Recuperamos los datos de la tupla a editar
            $.ajax({
                type: "GET",
                url: buscar,
                dataType: "JSON",
                success: function (list) {
                    $("#tSuma").val(list.listado[0].Suma);
                    $("#tDeducible").val(list.listado[0].Deducible);
                    $("#tPrima").val(list.listado[0].Prima);
                    //$("#tIdCo").val(list.listado[0].IdCob);
                    cobert = list.listado[0].IdCob;

                    console.log(cobert);

                    //Listamos las coberturas en el dropdownlist
                    $.ajax({
                        type: "GET",
                        url: url,
                        dataType: "JSON",
                        success: function (list) {
                            $("#dropCobert").empty();
                            for (var a = 0; a < list.list.length; a++) {
                                $("#dropCobert").append("<option value=" + list.list[a].IdCob + ">" + list.list[a].Descripcion + "</option>;")
                            }
                            $("#dropCobert").val(cobert);
                        }
                    });
                }
            });
        });
    });

    //EVENTO AL HACER CLIC EN EL BOTON DE GUARDAR
    $("#btnGuardarCambiosCobertura").click(function () {
        if($("#tSuma").val().trim() && $("#tDeducible").val().trim() && $("#tPrima").val().trim())
        {
            var coberturas = "/Polizas/RecuperarCoberturas/" + id;
            var url = "/Coberturas/GuardarCambios/";
            $.ajax({
                type: "POST",
                url: url,
                dataType: "JSON",
                //asignamos los parámetros que va a recibir el controlador
                data: {
                    idDetalle : datosCob[4],
                    idCobertura : $("#dropCobert").val(),
                    suma : $("#tSuma").val(),
                    deducible : $("#tDeducible").val(),
                    prima : $("#tPrima").val()
                },
                success: function () {
                    //Cuando se haya almacenado la modificación recuperamos nuevamente los datos
                    $.ajax({
                        type: "GET",
                        url: coberturas,
                        dataType: "JSON",
                        success: function (list) {
                            $("#myModalCob .close").click(); //cerramos la modal
                            dataTableDetalleCobert.clear(); //vaciamos la tabla
                            for (var a = 0; a < list.list.length; a++) {//volvemos a asignar los valores a la tabla
                                dataTableDetalleCobert.row.add([
                                    list.list[a].Descripcion,
                                    list.list[a].Suma,
                                    list.list[a].Deducible,
                                    list.list[a].Prima,
                                    list.list[a].IdDetalle]).draw(false);
                            }
                        }
                    })
                }
            })
        }
        else
            swal("Hay campos necesarios en el formulario que aún están vacíos.\nPor favor verifique.", "Seguros & Más", "warning");
    });

    //***********************************************************************************************
    //================================================CUOTAS==========================================
    var datosCuota = null;

    $(function () {
        var botonRandom0 = null;
        $("#tableCuotasEditar tbody").on('click', 'button', function () {
            datosCuota = dataTableDetalle.row($(this).parents('tr')).data();
            if (datosCuota[3] == "Pagado" || datosCuota[3] == "Abonado") {
                swal("No es posible editar. Esta cuota ya ha sido pagada o abonada.", "Seguros & Más", "warning")
                    .then((willDelete) => {
                        $("#myModalCuotas .close").click();
                    });
            }
            else {
                $("#btnActualizarCuota").show();
                botonRandom0 = $(this);
                var buscar = "/Polizas/DetalleCuota/";

                //Recuperamos los datos de la tupla a editar
                $.ajax({
                    type: "GET",
                    url: buscar,
                    dataType: "JSON",
                    data:
                    {
                        idDetalle: datosCuota[4]
                    },
                    success: function (list) {
                        $("#tFecha").val(list.list[0].Fecha);
                        $("#NumCuotaE").val(list.list[0].Num);
                        $("#tMonto").val(list.list[0].Monto);
                        $("#tEstado").val(list.list[0].Estado);
                    }
                });
            }
        });
    });

    //Almacenar cambios
    $("#btnActualizarCuota").click(function () {
        if ($("#tFecha").val().trim() && $("#tMonto").val().trim()) {
            $("#myModalCuotas .close").click();
            var act = "/Polizas/GuardarCambioCuotas/"

            $.ajax({
                type: "POST",
                url: act,
                dataType: "JSON",
                //asignamos los parámetros que va a recibir el controlador
                data: {
                    idDetalle: datosCuota[4],
                    fecha: $("#tFecha").val(),
                    monto: $("#tMonto").val()
                },
                success: function () {
                    //Cuando se haya almacenado la modificación recuperamos nuevamente los datos
                    var PolizaId = @Model.Id;
                    var url = "/Polizas/RecuperarCuotas/" + PolizaId;
                    $.ajax({
                        type: "GET",
                        url: url,
                        dataType: "JSON",
                        success: function (list) {
                            dataTableDetalle.clear();
                            for (x = 0; x < list.list.length; x++) {
                                dataTableDetalle.row.add([
                                    list.list[x].Cuotas,
                                    list.list[x].Vence,
                                    list.list[x].Monto,
                                    list.list[x].Estado,
                                    list.list[x].IdDetalle]).draw(false);
                            }
                        }
                    });
                }
            })
        }
        else
            swal("Hay campos necesarios en el formulario que aún están vacíos.\nPor favor verifique.", "Seguros & Más", "warning");
    })

    function cambiarMonto() {
        if ($("#PrimaNeta").val().trim() && $("#NumCuotas").val().trim()) {
            var prima = parseFloat($("#PrimaNeta").val());
            var num = parseInt($("#NumCuotas").val());
            $("#Monto").val(parseFloat(prima / num).toFixed(2));
        }
    }

    //Intento hacer que se bloquee el numero de cuotas según lo que el select tenga xD
    $("#TipoCuotas").change(function () {
        if ($(this).val() == "valor2")
            $("#NumCuotas").val("").prop("readonly", false);
        else{
            $("#Monto").val($("#PrimaNeta").val());
            $("#NumCuotas").val(1).prop("readonly", true);
        }
    });

    $("#btnAgregarCuotasE").click(function(){
        $("#TipoCuotas").val("valor1");
        $("#TipoCuotas").change();
         if ($("#txtPrimaNetaE").val().trim() &&
                    $("#txtEmisionE").val().trim() &&
                    $("#txtIvaE").val().trim() &&
                    $("#txtOtrosE").val().trim()) {
                    
                    //$("#ReciboP").prop("readonly", true);
                    var neta = parseFloat($("#txtPrimaNetaE").val());
                    var emision = parseFloat($("#txtEmisionE").val());
                    var iva = parseFloat($("#txtIvaE").val());
                    var otros = parseFloat($("#txtOtrosE").val());
                    $("#PrimaNeta").val(neta + emision + iva + otros);

                    var prima = parseFloat($("#PrimaNeta").val());
                    var num = parseInt($("#NumCuotas").val())
                    $("#Monto").val(prima / num);
                }
    })

    function GenerarCuotasEditar(){
        
        if($("#ReciboP").val().trim() && $("#Vence").val().trim() && $("#NumCuotas").val().trim())
        {
            $("#modal-cuotas .close").click();
            var PolizaId = @Model.Id;
            var url = "/Polizas/ActualizarCuotas/";
            $.ajax({
                type: "GET",
                url: url,
                datatype: "JSON",
                data:{
                    idPoliza: PolizaId,
                    numcuotas: $("#NumCuotas").val(),
                    vence: $("#Vence").val(),
                    monto: $("#Monto").val(),
                    recibo: $("#ReciboP").val()
                },
                success: function()
                {
                    dataTableDetalle.clear();
                    var url = "/Polizas/RecuperarCuotas/" + PolizaId;
                    $.ajax({
                        type: "GET",
                        url: url,
                        dataType: "JSON",
                        success: function (list) {
                            for (x = 0; x < list.list.length; x++) {
                                dataTableDetalle.row.add([
                                       list.list[x].Cuotas,
                                       list.list[x].Vence,
                                       list.list[x].Monto,
                                       list.list[x].Estado,
                                       list.list[x].IdDetalle]).draw(false);
                            }
                            $("#lblRecibo").text("Recibo de Prima: " + list.list[0].Recibo);
                        }
                    });
                }
            })
        }
        else
            swal("Hay campos necesarios en el formulario que aún están vacíos.\nPor favor verifique.", "Seguros & Más", "warning");

    }

        //***************************************************************************************************************************************
        //=========================Ahora tenemos los métodos para agregar nuevos valores a los datatables========================================
        //***************************************************************************************************************************************

        //Al mostrar la modal tambien hacemos lo siguiente:
    $("#btnAddCaract").click(function(){
        $("#btnAñadirCaracteristicas").show();
        $("#btnGuardarCambios").hide();
        var url = "/Caracteristicas/ListarCaracteristicas/";
        $("#tValor").val("");
        //Listar todas las caracteristicas para mostrarlas en el dropdownlist
        $.ajax({
            type: "GET",
            url: url,
            dataType: "JSON",
            success: function (list) {
                //Vaciar el dropdownlist para que los datos no se repitan
                $("#dropCaract").empty();
                for (var a = 0; a < list.list.length; a++) {
                    $("#dropCaract").append("<option value=" + list.list[a].IdCaract + ">" + list.list[a].Descripcion + "</option>;")
                }
            }
        })
    })

        //Invocar controlador
    $("#btnAñadirCaracteristicas").click(function(){
        if($("#tValor").val().trim())
        {
            $("#myModal5 .close").click();
            var add = "/Caracteristicas/AddNuevo/";
            var caracteristicas = "/Polizas/RecuperarCaracteristicas/" + id;
            $.ajax({
                type: "POST",
                url: add,
                dataType: "JSON",
                //asignamos los parámetros que va a recibir el controlador
                data: {
                    idBienAsegurado : id,
                    idCaracteristica: $("#dropCaract").val(),
                    valor: $("#tValor").val()
                },
                success: function () {
                    //Cuando se haya almacenado el nuevo registro recuperamos nuevamente los datos
                    $.ajax({
                        type: "GET",
                        url: caracteristicas,
                        dataType: "JSON",
                        success: function (list) {
                            $("#myModal5 .close").click(); //cerramos la modal
                            dataTableDetalleCaract.clear(); //vaciamos la tabla
                            for (var a = 0; a < list.list.length; a++) {//volvemos a asignar los valores a la tabla
                                dataTableDetalleCaract.row.add([
                                    list.list[a].Descripcion,
                                    list.list[a].Valor,
                                    list.list[a].IdDetalle]).draw(false);
                            }
                        }
                    })
                }
            })
        }
        else
            swal("Hay campos necesarios en el formulario que aún están vacíos.\nPor favor verifique.", "Seguros & Más", "warning");
    })

        //**************************************************************
        //========Agregar un nuevo registro de detalle de cobertura=====
        //Al mostrar la modal tambien hacemos lo siguiente:
        $("#btnAddCobert").click(function(){
            $("#btnAñadirCoberturas").show();
            $("#btnGuardarCambiosCobertura").hide();
            var url = "/Coberturas/ListarCoberturas/";
            $("#tSuma").val("");
            $("#tDeducible").val("");
            $("#tPrima").val("");

            //Listamos las coberturas en el dropdownlist
            $.ajax({
                type: "GET",
                url: url,
                dataType: "JSON",
                success: function (list) {
                    $("#dropCobert").empty();
                    for (var a = 0; a < list.list.length; a++) {
                        $("#dropCobert").append("<option value=" + list.list[a].IdCob + ">" + list.list[a].Descripcion + "</option>;")
                    }
                }
            });
        })

        //Invocar controlador
        $("#btnAñadirCoberturas").click(function(){
            if($("#tSuma").val().trim() && $("#tDeducible").val().trim() && $("#tPrima").val().trim())
            {
                $("#myModalCob .close").click();
                var add = "/Coberturas/AddNuevo/";
                var coberturas = "/Polizas/RecuperarCoberturas/" + id;
                $.ajax({
                    type: "POST",
                    url: add,
                    dataType: "JSON",
                    //asignamos los parámetros que va a recibir el controlador
                    data: {
                        idBienAsegurado : id,
                        idCobertura: $("#dropCobert").val(),
                        suma: $("#tSuma").val(),
                        deduc: $("#tDeducible").val(),
                        prima: $("#tPrima").val()
                    },
                    success: function () {
                        $.ajax({
                            type: "GET",
                            url: coberturas,
                            dataType: "JSON",
                            success: function (list) {
                                dataTableDetalleCobert.clear();
                                for (var a = 0; a < list.list.length; a++) {
                                    dataTableDetalleCobert.row.add([
                                   list.list[a].Descripcion,
                                   list.list[a].Suma,
                                   list.list[a].Deducible,
                                   list.list[a].Prima,
                                   list.list[a].IdDetalle]).draw(false);
                                }
                            }
                        })
                    }
                })
            }
            else
                swal("Hay campos necesarios en el formulario que aún están vacíos.\nPor favor verifique.", "Seguros & Más", "warning");
        });



        //**************************************************************************************************************************************************
        //************************************************************************ ARCHIVO GUARDAR, MOSTRAR BOTON, ELIMINAR ARCHIVO***********************************
        //Mostrar El BUTTON de Guardar archivo modal
        $("#myModalArchi").click(function(){
            $("#btnActualizarArchivo").show();
        })

        //Guardar Archivo de la modal
        var archivos = "/Polizas/RecuperarArchivos/" + @Model.Id;
        $("#btnActualizarArchivo").click(function(){

            if (($("#inputbtn"))[0].files.length > 0) {
                if(Size()){
                    $("#myModalArchi .close").click();
                    var selectedfile = ($("#inputbtn"))[0].files[0];
                    var dataString = new FormData();
                    dataString.append("fileUpload", selectedfile);
                    dataString.append("id",@Model.Id);

                    //console.log(selectedfile); 
                    //var archivos = "/Polizas/Max/";
                    $.ajax({
                        type: "POST",
                        url: "@Url.Action("GuardarARExtra", "Polizas")",
                        dataType: "JSON",
                    contentType: false,
                    processData: false,
                    data: dataString,
                    //asignamos los parámetros que va a recibir el controlador
                    success: function () {
                        //console.log($("#inputbtn").val()); 
                        //Cuando se haya almacenado el nuevo registro recuperamos nuevamente los datos
                        $.ajax({
                            type: "GET",
                            url: archivos,
                            dataType: "JSON",
                            success: function (list) {
                                $("#myModalArchi .close").click(); //cerramos la modal
                                dataTableArchivos.clear(); //vaciamos la tabla
                                for (var a = 0; a < list.list.length; a++) {//volvemos a asignar los valores a la tabla
                                    dataTableArchivos.row.add([
                                        list.list[a].Foto,
                                        list.list[a].Id]).draw(false)
                                }
                                $("#inputbtn").val("");
                            }
                            })
                        }
                    })
                }
                else
                {
                    swal("La capacidad de transferencia se ha excedido. Por favor reduza el tamaño de los archivos adjuntos.", "Seguros & Más", "warning");
                }
            }
            else {
                swal("No se ha seleccionado ningún archivo.\nPor favor verifique.", "Seguros & Más", "warning");
            }
        })

        function Size()
        {
            var suma=0;
            var l = $('#inputbtn')[0]['files'];
            for (var i = 0; i < l.length; i++) {
                suma += l[i]['size']
            };
            var filesize = suma / 1024 / 1024;
            if (filesize >= 4)
                return false;
            else
                return true;
        }

  
        //------------------------------------------------------------ELIMINAR IMAGEN--------------------------------------------------------

        //var datosCob = null;
        //var cobert;

        $(function () {
            var bontoeliminar = null;
            $("#tableArchivosP tbody").on('click', 'button', function () {
                //datosCob = dataTableDetalleCobert.row($(this).parents('tr')).data();
                //$("#btnGuardarCambiosCobertura").show();
                //$("#btnAñadirCoberturas").hide();

                bontoeliminar = $(this);
                var url = "/Polizas/EliminarArchivo/"+ bontoeliminar[0].value;
                var archivos = "/Polizas/RecuperarArchivos/" +@Model.Id;

                swal({
                    title: "¿Desea eliminar el archivo seleccionado?",
                    text: "Seguros & Más",
                    icon: "warning",
                    buttons: {
                        cancel: {
                            text: "Cancelar",
                            value: null,
                            visible: true,
                            className: "",
                            closeModal: true,
                        },
                        confirm: {
                            text: "OK",
                            value: true,
                            visible: true,
                            className: "",
                            closeModal: true
                        }
                    },
                    dangerMode: true,
                })
                    .then((willDelete) => {
                        if (willDelete) {
                            //Recuperamos los datos de la tupla a editar
                            $.ajax({
                                type: "GET",
                                url: url,
                                dataType: "JSON",
                                success: function (list) {
                                    $.ajax({
                                        type: "GET",
                                        url: archivos,
                                        dataType: "JSON",
                                        success: function (list) {
                                            $("#myModalArchi .close").click(); //cerramos la modal
                                            if (list.list.length != 0) {
                                                dataTableArchivos.clear(); //vaciamos la tabla
                                                for (var a = 0; a < list.list.length; a++) {//volvemos a asignar los valores a la tabla
                                                    dataTableArchivos.row.add([
                                                        list.list[a].Foto,
                                                        list.list[a].Id]).draw(false)
                                                }
                                            }
                                            else {
                                                dataTableArchivos.clear().draw(); //vaciamos la tabla
                                            }
                                        }
                                    })

                                }
                            });  
                        }
                    });  
            });
        });

        function Valor()
        {
            $.ajax({
                url: "/Polizas/SetValue/" + @Model.Id,
                type: "GET",
                success: function (data) {
                }
            });
        }



    //******************************************************************************
    //===========================Almacenar los datos================================
        //$form = null;
        //function EditarDatos(form) {
        //    $.validator.unobtrusive.parse(form);
        //    var data = $(form).serialize();
        //        $.ajax({
        //            url: form.action,
        //            type: "POST",
        //            data: data,
        //            success: function (data) {
        //                alert("Elementos Guardados");
        //                window.location.href = '/Polizas/Index';
        //            }
        //        });
        //    return false;
        //}

</script>
}
