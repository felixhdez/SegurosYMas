@model Inspinia_MVC5_SeedProject.Models.Tramite

@{
    ViewBag.Title = "Edit";
}

<style>
    #initialihiddenbutton,
    #btnCancelarContratante,
    #btnCancelarIntermediario {
        display: none;
    }

    .ibox-hr {
        -moz-border-bottom-colors: none;
        -moz-border-left-colors: none;
        -moz-border-right-colors: none;
        -moz-border-top-colors: none;
        background-color: #ffffff;
        border-color: #e7eaec;
        border-image: none;
        border-style: solid solid none;
        border-width: 2px 0 0;
        color: inherit;
        margin-bottom: 0;
        padding: 0;
        min-height: 48px;
    }

    p {
        font-weight: 400 !important;
    }

    h2 {
        font-size: 26px !important;
        font-weight: 600 !important;
    }

    .container {
        width: 97% !important;
    }

    .btn-default {
        background: #818e99 !important;
        color: white !important;
        opacity: inherit !important;
    }

    .stepwizard .btn-primary {
        background-color: #428bca !important;
        color: white !important;
    }


    /*body{
        margin-top:40px;
    }*/

    .stepwizard-step p {
        margin-top: 10px;
    }

    .stepwizard-row {
        display: table-row;
    }

    .stepwizard {
        display: table;
        width: 100%;
        position: relative;
    }

    .stepwizard-step button[disabled] {
        opacity: 1 !important;
        filter: alpha(opacity=100) !important;
    }

    .stepwizard-row:before {
        top: 14px;
        bottom: 0;
        position: absolute;
        content: " ";
        width: 100%;
        height: 1px;
        background-color: #ccc;
        z-index: 0;
    }

    .stepwizard-step {
        display: table-cell;
        text-align: center;
        position: relative;
    }

    .btn-circle {
        width: 30px;
        height: 30px;
        text-align: center;
        padding: 6px 0;
        font-size: 12px;
        line-height: 1.428571429;
        border-radius: 15px;
    }
</style>

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-sm-4">
        <h2>Trámites</h2>
        <ol class="breadcrumb">
            <li>
                @Html.ActionLink("Lista","Index")
            </li>
            <li class="active">
                <strong>Editar</strong>
            </li>
        </ol>
    </div>
    <div class="col-sm-8">
        <div class="title-action">
            <a class="btn btn-success btn-outline dim" href="@Url.Action("Index","Tramites")"><i class="fa fa-arrow-left"></i>&nbsp;&nbsp;Regresar</a>
        </div>
    </div>
</div>




<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h5>Edit Tramite</h5>
                </div>
                <div class="ibox-content">
                    <div class="container">
                        <div class="stepwizard">
                            <div class="stepwizard-row setup-panel">
                                <div class="stepwizard-step col-xs-6">
                                    <a href="#step-1" type="button" class="btn btn-primary btn-circle">1</a>
                                    <p>Trámite</p>
                                </div>
                                <div class="stepwizard-step col-xs-6">
                                    <a href="#step-2" type="button" class="btn btn-default btn-circle" @*disabled="disabled"*@>2</a>
                                    <p>Archivos</p>
                                </div>
                            </div>
                        </div>
                    </div>
                    <br />

                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true)
                        @Html.HiddenFor(model => model.Id)

                        <!--Paso #1-->
                        <div class="row setup-content" id="step-1">
                            <div class="col-xs-12 col-md-offset-0">
                                <div class="col-md-12">
                                    <div class="panel panel-primary">
                                        <div class="panel-heading">
                                            <i class="fa fa-pencil-square-o fa-lg"></i>
                                        </div>
                                        <!--Contenido de la caja-->
                                        <div class="panel-body">
                                            <!--Título del contenedor-->
                                            <div class="container" style="margin-top:20px;">
                                                <h2>Trámite</h2>
                                                <hr class="ibox-hr" />
                                                <br /><br />
                                            </div> <!--Fin del titulo-->

                                            <div class="form-horizontal">

                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.Tipo,new { @class = "control-label col-md-2" })
                                                    <div class="col-md-10">
                                                        @Html.DropDownList("Tipo",(SelectList)ViewBag.Tipos,htmlAttributes: new { @class = "form-control",@id = "dropTipo" })
                                                        @Html.ValidationMessageFor(model => model.Tipo,"",new { @class = "text-danger" })
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.Modalidad,new { @class = "control-label col-md-2" })
                                                    <div class="col-md-10">
                                                        @Html.EditorFor(model => model.Modalidad)
                                                        @Html.ValidationMessageFor(model => model.Modalidad,"",new { @class = "text-danger" })
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.Descripcion,new { @class = "control-label col-md-2" })
                                                    <div class="col-md-10">
                                                        @Html.EditorFor(model => model.Descripcion)
                                                        @Html.ValidationMessageFor(model => model.Descripcion,"",new { @class = "text-danger" })
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.FechaRecepcion,new { @class = "control-label col-md-2" })
                                                    <div class="col-md-10">
                                                        @Html.EditorFor(model => model.FechaRecepcion)
                                                        @Html.ValidationMessageFor(model => model.FechaRecepcion,"",new { @class = "text-danger" })
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.NombreEjecutivo,new { @class = "control-label col-md-2" })
                                                    <div class="col-md-10">
                                                        @Html.EditorFor(model => model.NombreEjecutivo)
                                                        @Html.ValidationMessageFor(model => model.NombreEjecutivo,"",new { @class = "text-danger" })
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.FechaEnvio,new { @class = "control-label col-md-2" })
                                                    <div class="col-md-10">
                                                        @Html.EditorFor(model => model.FechaEnvio)
                                                        @Html.ValidationMessageFor(model => model.FechaEnvio,"",new { @class = "text-danger" })
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.FechaRecibido,new { @class = "control-label col-md-2" })
                                                    <div class="col-md-10">
                                                        @Html.EditorFor(model => model.FechaRecibido)
                                                        @Html.ValidationMessageFor(model => model.FechaRecibido,"",new { @class = "text-danger" })
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.RecibidoPor,new { @class = "control-label col-md-2" })
                                                    <div class="col-md-10">
                                                        @Html.EditorFor(model => model.RecibidoPor)
                                                        @Html.ValidationMessageFor(model => model.RecibidoPor,"",new { @class = "text-danger" })
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.Finalizacion,new { @class = "control-label col-md-2" })
                                                    <div class="col-md-10">
                                                        @Html.EditorFor(model => model.Finalizacion)
                                                        @Html.ValidationMessageFor(model => model.Finalizacion,"",new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                                <input name="PolizaId" id="txtPolizaId" hidden />
                                            </div>
                                            <button class="btn btn-primary nextBtn pull-right" type="button" style="margin-top:1.7em;"> Siguiente</button>

                                        </div> <!--termina contenido de la caja-->
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!--Paso #2-->
                        <div class="row setup-content" id="step-2">
                            <div class="col-xs-12 col-md-offset-0">
                                <div class="col-md-12">
                                    <div class="panel panel-primary">
                                        <div class="panel-heading">
                                            <i class="fa fa-pencil-square-o fa-lg"></i>
                                        </div>
                                        <!--Contenido de la caja-->
                                        <div class="panel-body">
                                            <!--Título del contenedor-->
                                            <div class="container" style="margin-top:20px;">
                                                <h2>Archivos</h2>
                                                <a class="btn btn-success fa fa-plus dim pull-right" data-toggle="modal" data-target="#myModalArchi" style="float: right;margin-top: -2.5em;margin-left: 1em;" id="btnAddArchivo"> &nbsp; &nbsp; Agregar </a>
                                                <hr class="ibox-hr" />
                                            </div> <!--Fin del titulo-->
                                            <!--TABLA DE DETALLE DE ARCHIVOS-->
                                            <div class="panel-footer">
                                                <div class="table-responsive">
                                                    <table class="table" id="tableArchivosP">
                                                        <thead>
                                                            <tr>
                                                                <th>Imagen</th>
                                                                <th>Acciones</th>
                                                            </tr>
                                                        </thead>
                                                    </table>
                                                </div>
                                            </div>
                                            <!--FIN DE TABLA DE DETALLE DE ARCHIVOS-->
                                            <br />

                                            <button class="btn btn-primary backBtn pull-left" type="button" style="float:left; margin-top:1.7em;">Regresar</button>
                                            <button class="btn btn-primary pull-right" type="submit" style="margin-top:1.7em;"> Guardar </button>

                                        </div> <!--termina contenido de la caja-->
                                    </div>
                                </div>
                            </div>
                        </div>
                    }


                </div>
            </div>
        </div>
    </div>
</div>

<!--Modal para agregar archivo-->
<div class="modal inmodal fade" id="myModalArchi" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-md">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                <h4 class="modal-title">Agregar Archivo</h4>

            </div>
            <div class="modal-body">

                @Html.Partial("_AgregarArchivo")


            </div>
            <div class="modal-footer">
                <button type="button" onclick="" class="btn btn-success pull-right" id="btnActualizarArchivo">Guardar</button>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <!-- Datatable -->
    <link href="~/Content/DataTables/media/css/dataTables.bootstrap.min.css" rel="stylesheet" />
    <link href="~/Content/DataTables/media/css/jquery.dataTables.min.css" rel="stylesheet" />
    <link href="~/Content/DataTables/media/css/dataTables.jqueryui.min.css" rel="stylesheet" />
    <script src="~/Scripts/DataTables/media/js/dataTables.bootstrap.min.js"></script>
    <script src="~/Scripts/DataTables/media/js/dataTables.jqueryui.min.js"></script>
    <script src="~/Scripts/DataTables/media/js/jquery.dataTables.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>

    <!-- Script para el paso a paso.-->
    <script>
        $(document).ready(function () {
            var navListItems = $('div.setup-panel div a'),
                allWells = $('.setup-content'),
                allNextBtn = $('.nextBtn'),
                allBackButton = $('.backBtn');

            allWells.hide();

            navListItems.click(function (e) {
                e.preventDefault();
                var $target = $($(this).attr('href')),
                    $item = $(this);

                if (!$item.hasClass('disabled')) {
                    navListItems.removeClass('btn-primary').addClass('btn-default');
                    $item.addClass('btn-primary');
                    allWells.hide();
                    $target.show();
                    $target.find('input:eq(0)').focus();
                }
            });
            allBackButton.click(function () {
                var curStep = $(this).closest(".setup-content"),
                    curStepBtn = curStep.attr("id"),
                    nextStepWizard = $('div.setup-panel div a[href="#' + curStepBtn + '"]').parent().prev().children("a"),
                    curInputs = curStep.find("input[type='text'],input[type='url']"),
                    isValid = true;

                $(".form-group").removeClass("has-error");
                for (var i = 0; i < curInputs.length; i++) {
                    if (!curInputs[i].validity.valid) {
                        isValid = false;
                        $(curInputs[i]).closest(".form-group").addClass("has-error");
                    }
                }

                nextStepWizard.removeAttr('disabled').trigger('click');
            });

            allNextBtn.click(function () {
                var curStep = $(this).closest(".setup-content"),
                    curStepBtn = curStep.attr("id"),
                    nextStepWizard = $('div.setup-panel div a[href="#' + curStepBtn + '"]').parent().next().children("a"),
                    curInputs = curStep.find("input[type='text'],input[type='url']"),
                    isValid = true;

                $(".form-group").removeClass("has-error");
                for (var i = 0; i < curInputs.length; i++) {
                    if (!curInputs[i].validity.valid) {
                        isValid = false;
                        $(curInputs[i]).closest(".form-group").addClass("has-error");
                    }
                }

                if (isValid)
                    nextStepWizard.removeAttr('disabled').trigger('click');
            });


            $('div.setup-panel div a.btn-primary').trigger('click');
        });
    </script>

    <script>
        $(document).ready(function () {
            $("#dropTipo").select2({ width: "100%" });
        });

        //Archivo------------------------------------------------------------------------------------------------------------------
        var dataTableArchivos = null;
        $(function () {
            // Instancia del datatable para mostrar los detalles.
            dataTableArchivos = $("#tableArchivosP").DataTable({
                "info": false,
                "paging": false,
                "ordering": false,
                "searching": false,
                "language": {
                    "emptyTable": "No hay imágenes que mostrar.",
                }, "columnDefs": [{
                    "targets": 0,
                    "render": function (data, type, row, meta) {
                        return "<img src='" + data + "' style='width:40%'/>";
                    },
                },
                {
                    "targets": 1,
                    "render": function (data, type, row, meta) {
                        return "<button class='btn btn-sm btn-danger' value='" + data + "' type='button'>Eliminar</button>";
                    },
                }]
            });
        });

        $(function () {
            var archivos = "/Tramites/RecuperarArchivos/" + @Model.Id;
            //Ahora traemos todas las imagenes que pertenecen a esa poliza
            $.ajax ({
                type: "GET",
                url: archivos,
                dataType: "JSON",
                success: function (list) {
                    dataTableArchivos.clear();
                    for(var a=0; a<list.list.length; a++) {
                        dataTableArchivos.row.add([
                         list.list[a].Foto,
                        list.list[a].Id]).draw(false)
                    }
                }
            })


        });

        //Archivo------------------------------------------------------------------------------------------------------------------

        //**************************************************************************************************************************************************
        //************************************************************************ ARCHIVO GUARDAR, MOSTRAR BOTON, ELIMINAR ARCHIVO***********************************
        //Mostrar El BUTTON de Guardar archivo modal
        $("#myModalArchi").click(function(){
            $("#btnActualizarArchivo").show();
        })

        //Guardar Archivo de la modal
        var archivos = "/Tramites/RecuperarArchivos/" + @Model.Id;
        $("#btnActualizarArchivo").click(function () {
            if (($("#inputbtn"))[0].files.length > 0) {
                if(Size()){
                    $("#myModalArchi .close").click();
                    var selectedfile = ($("#inputbtn"))[0].files[0];
                    var dataString = new FormData();
                    dataString.append("fileUpload", selectedfile);
                    dataString.append("id",@Model.Id);

                    //console.log(selectedfile);
                    //var archivos = "/Polizas/Max/";
                    $.ajax({
                        type: "POST",
                        url: "@Url.Action("GuardarARExtra", "Tramites")",
                        dataType: "JSON",
                    contentType: false,
                    processData: false,
                    data: dataString,
                    //asignamos los parámetros que va a recibir el controlador
                    success: function () {
                        //console.log($("#inputbtn").val());
                        //Cuando se haya almacenado el nuevo registro recuperamos nuevamente los datos
                        $.ajax({
                            type: "GET",
                            url: archivos,
                            dataType: "JSON",
                            success: function (list) {
                                $("#myModalArchi .close").click(); //cerramos la modal
                                dataTableArchivos.clear(); //vaciamos la tabla
                                for (var a = 0; a < list.list.length; a++) {//volvemos a asignar los valores a la tabla
                                    dataTableArchivos.row.add([
                                        list.list[a].Foto,
                                        list.list[a].Id]).draw(false)
                                }
                                $("#inputbtn").val("");
                            }
                        })
                    }
                })
                }
                else
                {
                    swal("La capacidad de transferencia se ha excedido. Por favor reduza el tamaño de los archivos adjuntos.", "Seguros & Más", "warning");
                }
            }
            else {
                swal("No se ha seleccionado ningún archivo.\nPor favor verifique.", "Seguros & Más", "warning");
            }

        })

        function Size()
        {
            var suma=0;
            var l = $('#inputbtn')[0]['files'];
            for (var i = 0; i < l.length; i++) {
                suma += l[i]['size']
            };
            var filesize = suma / 1024 / 1024;
            if (filesize >= 4)
                return false;
            else
                return true;
        }

        //------------------------------------------------------------ELIMINAR IMAGEN--------------------------------------------------------

        //var datosCob = null;
        //var cobert;

        $(function () {
            var bontoeliminar = null;
            $("#tableArchivosP tbody").on('click', 'button', function () {
                //datosCob = dataTableDetalleCobert.row($(this).parents('tr')).data();
                //$("#btnGuardarCambiosCobertura").show();
                //$("#btnAñadirCoberturas").hide();
                bontoeliminar = $(this);
                var url = "/Tramites/EliminarArchivo/"+ bontoeliminar[0].value;
                var archivos = "/Tramites/RecuperarArchivos/" +@Model.Id ;

                swal({
                    title: "¿Desea eliminar el archivo seleccionado?",
                    text: "Seguros & Más",
                    icon: "warning",
                    buttons: {
                        cancel: {
                            text: "Cancelar",
                            value: null,
                            visible: true,
                            className: "",
                            closeModal: true,
                        },
                        confirm: {
                            text: "OK",
                            value: true,
                            visible: true,
                            className: "",
                            closeModal: true
                        }
                    },
                    dangerMode: true,
                })
                    .then((willDelete) => {
                        if (willDelete) {
                            //Recuperamos los datos de la tupla a editar
                            $.ajax({
                                type: "GET",
                                url: url,
                                dataType: "JSON",
                                success: function (list) {
                                    $.ajax({
                                        type: "GET",
                                        url: archivos,
                                        dataType: "JSON",
                                        success: function (list) {
                                            $("#myModalArchi .close").click(); //cerramos la modal
                                            if (list.list.length != 0) {
                                                dataTableArchivos.clear(); //vaciamos la tabla
                                                for (var a = 0; a < list.list.length; a++) {//volvemos a asignar los valores a la tabla
                                                    dataTableArchivos.row.add([
                                                        list.list[a].Foto,
                                                        list.list[a].Id]).draw(false)
                                                }
                                            }
                                            else {
                                                dataTableArchivos.clear().draw();
                                            }
                                        }
                                    })

                                }
                            });
                        }
                    });
            });
        });

        $(function () {
            $("#txtPolizaId").val(@Model.PolizaId);
        })
    </script>
}
